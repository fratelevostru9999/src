if not game:IsLoaded() then
    game.Loaded:Wait()
end

local player = game.Players.LocalPlayer
-- // // // Services // // // --
    local VirtualInputManager = game:GetService("VirtualInputManager")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local VirtualUser = game:GetService("VirtualUser")
    local HttpService = game:GetService("HttpService")
    local GuiService = game:GetService("GuiService")
    local RunService = game:GetService("RunService")
    local Workspace = game:GetService("Workspace")
    local Players = game:GetService("Players")
    local CoreGui = game:GetService('StarterGui')
    local UserInputService = game:GetService('UserInputService')
    local Remote = game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Bridge")

-- // // // Locals // // // --
    local LocalPlayer = Players.LocalPlayer
    local LocalCharacter = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local HumanoidRootPart = LocalCharacter:FindFirstChild("HumanoidRootPart")
    local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
    local LocalPetList = LocalPlayer.PlayerGui.UI.Frames.Pets.Background.Frame.List
    local plr = game.Players.LocalPlayer
    local char = plr.Character or plr.CharacterAdded:Wait()
    local f = require(game:GetService("Players").LocalPlayer.PlayerScripts.StarX)
    local bridges = f["Bridge"]
    local fireserver = bridges["FireServer"]
    local utils = f["Utils"]
    local pet = utils["Pet"]
    local petsFolder = workspace:WaitForChild("Server"):WaitForChild("Pets")
    local player = game.Players.LocalPlayer
    local maps = workspace:WaitForChild("Client"):WaitForChild("Maps")
    local enemiesFolder = workspace.Server:WaitForChild("Enemies")
    local selectedMap = maps:GetChildren()[1] -- ‡∏î‡∏∂‡∏á map ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏≤
    local enemies = enemiesFolder:FindFirstChild(selectedMap.Name) -- ‡∏î‡∏∂‡∏á enemies ‡∏Ç‡∏≠‡∏á map ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    -- local getmodel = pet["Get_All_Pets_Models"]
    -- local Get_Island = workspace.Server.Trial.Enemies.Easy
-- myurl script : loadstring(game:HttpGet("https://i-lnw.com/roblox/anime_shadow_rewrite.lua", true))()

if game.PlaceId == 89438510123061 then 
    local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
    local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
    local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
    
    local NameScript = '[XMAS PART 2] Anime Shadow'
    local updscrip = '25/12/24 09:55'

    local Window = Fluent:CreateWindow({
        Title = NameScript,
        SubTitle = "by Adam (v2.0.4) UPD|" .. updscrip,
        TabWidth = 130,
        Size = UDim2.fromOffset(550, 330),
        Acrylic = false,
        Theme = "Amethyst",
        MinimizeKey = Enum.KeyCode.LeftControl
    })

    -- ===================== icon ===================== --
        local screenGui = Instance.new("ScreenGui")
        local minimizeButton = Instance.new("ImageButton")
        local buttonCorner = Instance.new("UICorner")

        -- ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á ScreenGui
        screenGui.Name = "MobileMinimize"
        screenGui.Parent = game:GetService("CoreGui")
        screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

        -- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á ImageButton (Minimize Button)
        minimizeButton.Parent = screenGui
        minimizeButton.BackgroundColor3 = Color3.new(1.000000, 1.000000, 1.000000)
        minimizeButton.BorderColor3 = Color3.new(1.000000, 1.000000, 1.000000)
        minimizeButton.BorderSizePixel = 0
        minimizeButton.Position = UDim2.new(0,584,0,14)

        -- ‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏°
        local originalSize = UDim2.new(0, 45, 0, 45)
        minimizeButton.Size = originalSize + UDim2.new(0, originalSize.X.Offset * 0.15, 0, originalSize.Y.Offset * 0.15)
        minimizeButton.Image = "rbxassetid://131642672159441"

        -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏°‡∏∏‡∏°‡πÇ‡∏Ñ‡πâ‡∏á‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°
        buttonCorner.CornerRadius = UDim.new(0.2, 0)
        buttonCorner.Parent = minimizeButton

        -- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡∏Å
        local dragging = false
        local dragInput, touchPos, buttonPos

        -- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡∏Å
        minimizeButton.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                touchPos = input.Position
                buttonPos = minimizeButton.Position

                -- ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡∏Å‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)

        -- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏≤‡∏™‡πå/‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™
        minimizeButton.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end)

        -- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏≤‡∏Å‡∏õ‡∏∏‡πà‡∏°
        game:GetService("UserInputService").InputChanged:Connect(function(input)
            if input == dragInput and dragging then
                local delta = input.Position - touchPos
                minimizeButton.Position = UDim2.new(
                    buttonPos.X.Scale,
                    buttonPos.X.Offset + delta.X,
                    buttonPos.Y.Scale,
                    buttonPos.Y.Offset + delta.Y
                )
            end
        end)

        -- ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏¢‡πà‡∏≠
        minimizeButton.MouseButton1Click:Connect(function()
            Window:Minimize()
        end)
    -- ===================== icon ===================== --

    function ShowNotification(Content,SubContent)
        Fluent:Notify({
            Title = "DENG HUB",
            Content = Content,
            SubContent = SubContent,
            Duration = 2.5
        })
    end

    --Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
    local Tabs = {
        Main = Window:AddTab({ Title = "Farm | Egg", Icon = "gamepad-2" }),
        Trial = Window:AddTab({ Title = "Trial", Icon = "gem" }),
        Dungeon = Window:AddTab({ Title = "Dungeon", Icon = "gem" }),
        TimeRoom = Window:AddTab({ Title = "Raid | TimeRoom", Icon = "gem" }),
        XMAS = Window:AddTab({ Title = "üéÑXMAS", Icon = "gem" }),
        Teleport = Window:AddTab({ Title = "Teleport", Icon = "slack" }),
        Webhooks = Window:AddTab({ Title = "Webhook", Icon = "ghost" }),
        Miscellaneous = Window:AddTab({ Title = "Miscellaneous", Icon = "list-ordered" }),
        Tools = Window:AddTab({ Title = "Tools", Icon = "wrench" }),
        Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
    }

    local Options = Fluent.Options

    -- ============================================= Other Code =====================================
        do -- no delete
            -- ShowNotification("[XMAS] Anime Shadow Script","Script Update 09/12/24 06:30.")

            -- ======== Configuration Variables ======== 
            -- ======== Configuration Variables ========

            -- ======== Global Flags / Settings ========
            for _, v in ipairs{
                "AutoTrialEasy", "AutoDungeon", "AutoEgg", "AutoXmasRaid", "AutoXmasDungeon", "AutoXmasDefense", "AutoRaid", "AutoTimeRoom","autoframNear", "autoframAll",
                "AutoFishing", "AutoTeamLuck", "AutoTeamLuckC","autoframNearC", "autoframAllC", "AutoXmasSpecial", "AutoXmasSpecialC","AutoXmasDefense2"
            } do 
                _G[v] = false 
            end
            -- ======== Global Flags / Settings ========
            
            -- ==================================== Start Function Group ============================
                -- ===================================== Function =====================================
                -- ===================================== Function =====================================
                -- ===================================== Function =====================================
                -- ===================================== Function =====================================
                -- ===================================== Function =====================================
                -- ===================================== Function =====================================
                -- ===================================== Function =====================================
                -- ===================================== Function =====================================

                -- ===================================== ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç ‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡πá‡∏Å‡∏ä‡∏≤‡∏¢‡∏™‡∏Å‡∏≤‡∏¢‡πÇ‡∏•‡πÅ‡∏•‡∏ô =====================================
                    -- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á debug
                    _G.DebugMode = false -- ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πá‡∏ô false ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î debug
                    if VariableIndex == nil then
                        VariableIndex = {
                            ["Xmas Dungeon"]  = false,
                            ["Dungeon"]  = false,
                            ["TrialEasy"]  = false,
                            ["XmasSpecial"]  = false,
                            ["Raid"]  = false,
                            ["Xmas Raid"]  = false,
                            ["Xmas Defense"]  = false,
                            ["Xmas Defense2"]  = false,
                        }
                    end

                    if VariableTable == nil then
                        VariableTable = {
                            ["Xmas Dungeon"] = 1,
                            ["Dungeon"] = 2,
                            ["TrialEasy"] = 3,
                            ["XmasSpecial"]  = 4,
                            ["Raid"] = 5,
                            ["Xmas Raid"] = 6,
                            ["Xmas Defense2"] = 7,
                            ["Xmas Defense"] = 8,
                        }
                    end 

                    local function logDebug(message)
                        if _G.DebugMode then
                            warn(message)
                        end
                    end

                    local Equal = function(args)
                        for key, value in pairs(VariableTable) do
                            if value < args and VariableIndex[key] == true then
                                logDebug("Equal check passed for: " .. key .. " with value: " .. value)
                                return true
                            end
                        end
                        return false
                    end

                    local jack = function(Variable, Status, Starting)
                        local GetFirstTable = nil

                        -- ‡∏´‡∏≤ key ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÅ‡∏£‡∏Å‡∏™‡∏∏‡∏î (1)
                        for key, value in pairs(VariableTable) do
                            if value == 1 then
                                GetFirstTable = key
                                break
                            end
                        end

                        if Status == "Get" then
                            -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÅ‡∏£‡∏Å
                            if Variable == GetFirstTable and VariableIndex[Variable] then
                                logDebug("Task " .. Variable .. " is the first table and active.")
                                return true
                            end
                            if VariableIndex[GetFirstTable] then
                                logDebug("Task " .. Variable .. " is blocked because first table is active.")
                                return false
                            end

                            -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
                            for i = 1, VariableTable[Variable] - 1 do
                                task.wait()
                                if Equal(i) == true then
                                    logDebug("Task " .. Variable .. " is blocked by index " .. i)
                                    return false
                                end
                            end

                            logDebug("Task " .. Variable .. " is allowed to proceed.")
                            return VariableIndex[Variable] or false
                        elseif Status == "Post" then
                            VariableIndex[Variable] = Starting
                            if Starting then
                                logDebug("Task " .. Variable .. " is set to active.")
                            else
                                logDebug("Task " .. Variable .. " is set to inactive.")
                            end
                        elseif Status == "Check" then
                            if VariableIndex[Variable] then
                                logDebug("Task " .. Variable .. " is currently active.")
                            else
                                logDebug("Task " .. Variable .. " is currently inactive.")
                            end
                            return VariableIndex[Variable]
                        end

                        return false
                    end
                    -- if check then
                    --     BYfArt("Trial Easy","Post",true)
                    --     if BYfArt("Trial Easy","Get") then 
                    
                    --     end
                    -- end
                -- ===================================== ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç ‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡πá‡∏Å‡∏ä‡∏≤‡∏¢‡∏™‡∏Å‡∏≤‡∏¢‡πÇ‡∏•‡πÅ‡∏•‡∏ô =====================================
                -- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏Ñ‡∏±‡πà‡∏ô‡∏û‡∏±‡∏ô
                    local function formatnum(num)
                        return string.gsub(num, "(%d)(%d%d%d)$", "%1,%2")  -- ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏™‡πà‡∏Ñ‡∏±‡πà‡∏ô‡∏û‡∏±‡∏ô
                    end
                -- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏Ñ‡∏±‡πà‡∏ô‡∏û‡∏±‡∏ô

                -- ===== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á Embed ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Discord Webhook =====
                    local function sendToDiscord(title,description,fields,webhookUrl,color,tags_id,useTags)
                        local Data = {
                            ["username"] = "Anime Shadow | " .. player.DisplayName  .. "",
                            ["avatar_url"] = "https://cdn.discordapp.com/attachments/1312405176455532568/1312489885298589757/DENGHUB.png?ex=674caef5&is=674b5d75&hm=3ffc8c4637e1e68cadcda1520a1d041eb12cf68ae8fc5f7f99188d6d36022aec&",
                            -- ["content"] = "<@" .. tags_id .. ">",
                            ["embeds"] = {{
                                -- ["title"] = title,
                                ["author"] = {
                                    name = title,
                                    icon_url = "https://cdn.discordapp.com/attachments/1312405176455532568/1315479584237424712/noFilter_5.webp?ex=67578f55&is=67563dd5&hm=e1b127a7a94b45678500ceadb80875486ee6e5ae65662895e6a76ac11a049b41&"
                                },
                                ["description"] = description,
                                ["color"] = color,
                                ["fields"] = fields,
                                ["footer"] = { text = "DENGHUB by Adam | " .. os.date("%d/%m/%Y %H:%M:%S") .. "", icon_url = "https://cdn.discordapp.com/attachments/1312405176455532568/1312489885298589757/DENGHUB.png?ex=674caef5&is=674b5d75&hm=3ffc8c4637e1e68cadcda1520a1d041eb12cf68ae8fc5f7f99188d6d36022aec&" }
                                -- ["thumbnail"] = {
                                --     ["url"] = "https://cdn.discordapp.com/attachments/1293684450810396754/1311103839360778280/noFilter.png?ex=6747a41a&is=6746529a&hm=5cee5ff5ff78d513134b000d3cd089ffb2710a5f2c5bf3e74d9b8a6865156ec1&"
                                -- },
                                -- ["image"] = {
                                --     ["url"] = "https://cdn.discordapp.com/attachments/1293684450810396754/1311151209909846017/noFilter.png?ex=6747d038&is=67467eb8&hm=b7790ee47d6e919f84c6f22bc0b173b456165903d71809600f62aac2ceef391c&"
                                -- }
                            }}
                        }
                        -- ‡πÄ‡∏û‡∏¥‡πà‡∏° content ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠ tags_id ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô nil
                        if useTags and tags_id ~= nil then
                            Data["content"] = "<@" .. tags_id .. ">"
                        end

                        local Headers = {["Content-Type"] = "application/json"}
                        local Encoded = HttpService:JSONEncode(Data)
                        local Request = http_request or request or HttpPost or syn.request
                        local Success, Error = pcall(function()
                            Request({Url = webhookUrl, Body = Encoded, Method = "POST", Headers = Headers})
                        end)
                    end
                -- ===== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á Embed ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Discord Webhook =====

                -- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Rewards Defense_Rewards
                    local function getRewards()
                        local rewardsList = game:GetService("Players").LocalPlayer.PlayerGui.UI.Frames.Defense_Rewards.Frame.Background.Content.Rewards.List
                        local rewardsData = {}

                        -- ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Frame ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô Rewards List
                        for _, child in ipairs(rewardsList:GetChildren()) do
                            if child:IsA("Frame") and child:FindFirstChild("Frame") then
                                local innerFrame = child.Frame

                                -- ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ Title ‡πÅ‡∏•‡∏∞ Amount
                                local title = innerFrame:FindFirstChild("Title") and innerFrame.Title.Text or "N/A"
                                local amount = innerFrame:FindFirstChild("Amount") and innerFrame.Amount.Text or "N/A"

                                -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ç‡πâ‡∏≤ table
                                table.insert(rewardsData, {
                                    -- Name = child.Name,
                                    Title = title,
                                    Amount = amount
                                })
                            end
                        end

                        return rewardsData
                    end
                -- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Rewards Defense_Rewards

                -- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á Discord Defense_Rewards
                    local function sendRewardsToDiscord()
                        local rewardsData = getRewards()
                        local fields = {}
                    
                        -- ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• fields ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Embed
                        local itemNormalText = ""
                        for _, data in ipairs(rewardsData) do
                            itemNormalText = itemNormalText .. data.Title .. " [" .. formatnum(data.Amount) .. "]\n"
                        end
                        table.insert(fields, { name = "Rewards", value = itemNormalText, inline = true })
                    
                        -- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Embed
                        local title = "Xmas Defense Loop"
                        local description = ""
                        local color = 0x00ff00 -- ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
                    
                        -- ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô sendToDiscord
                        sendToDiscord(title, description, fields, whItemInput, color, nil, false)
                    end
                -- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á Discord Defense_Rewards

                -- ===== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° =====
                    local function GetItemsData()
                        local player = game.Players.LocalPlayer
                        -- ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å Pages ‡∏ï‡πà‡∏≤‡∏á‡πÜ
                        local pages = {
                            Items = player.PlayerGui.UI.Frames.Inventory.Background.Frame.Pages.Items.List,
                            Chests = player.PlayerGui.UI.Frames.Inventory.Background.Frame.Pages.Chests.List,
                            Accessories = player.PlayerGui.UI.Frames.Inventory.Background.Frame.Pages.Accessories.List
                        }
                        local itemsData = {}
                    
                        -- ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤
                        for category, list in pairs(pages) do
                            for _, itemFrame in ipairs(list:GetChildren()) do
                                if itemFrame:IsA("Frame") and itemFrame:FindFirstChild("Frame") then
                                    local itemName = itemFrame.Name
                                    local itemAmountStr = itemFrame.Frame.Amount.Text
                                    local cleanedAmountStr = itemAmountStr:gsub(",", "")
                                    local itemAmount = tonumber(cleanedAmountStr:match("^(%d+)"))
                    
                                    -- ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤
                                    if itemAmount then
                                        itemsData[itemName] = (itemsData[itemName] or 0) + itemAmount
                                    else
                                        itemsData[itemName] = (itemsData[itemName] or 0)
                                    end
                                end
                            end
                        end
                    
                        return itemsData
                    end
                -- ===== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° =====

                -- ===== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏¢‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏Ç‡∏≠‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° ======
                    local function SortItems(itemsData)
                        local importantItems = {
                            "Snowman",
                            "Candy Cane",
                            "Passive Capsule",
                            "Cursed Plasma",
                            "Trial Shard",
                            "Dungeon Shard",
                            "Talent Shard",
                            "Gingerbread"
                        }
                    
                        local evoItems = {
                            "Skull Face",
                            "Ghost Force",
                            "Fish Essence",
                            "Crystal Essence",
                            "Curse Essence",
                            "Yellow Essence",
                            "Pink Essence",
                            "Green Essence",
                            "Gray Essence"
                        }
                    
                        local chestItems = {
                            "Potions Chest",
                            "Artefacts Chest",
                            "Beginner Chest",
                            "Dragon Chest"
                        }
                    
                        local AccessoriesItems = {
                            "Clock Gear",
                            "Inventory Curse",
                            "Force Helmet",
                            "Gingerbread Hat",
                            "Santa's Hat",
                            "Gingerbread Head"
                        }
                        local sortedItems = {
                            important = {},
                            evo = {},
                            chests = {},
                            accessories = {}
                        }
                    
                        for itemName, amount in pairs(itemsData) do
                            if table.find(importantItems, itemName) then
                                table.insert(sortedItems.important, {name = itemName, amount = amount})
                            elseif table.find(evoItems, itemName) then
                                table.insert(sortedItems.evo, {name = itemName, amount = amount})
                            elseif table.find(chestItems, itemName) then
                                table.insert(sortedItems.chests, {name = itemName, amount = amount})
                            elseif table.find(AccessoriesItems, itemName) then
                                table.insert(sortedItems.accessories, {name = itemName, amount = amount})
                            end
                        end
                    
                        return sortedItems
                    end
                -- ===== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏¢‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏Ç‡∏≠‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° ======

                -- ===== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•Pet‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ôPets ======
                    local function getPetData()
                        local petData = {}
                        for _, child in pairs(LocalPetList:GetChildren()) do
                            if child:IsA("Frame") and child.Frame then
                                local uid = child.Name
                                local title = child.Frame:FindFirstChild("Title")
                                local level = child.Frame:FindFirstChild("Level")
                                
                                if title and level then
                                    LocalPetList[uid].Equipped.Icon.Position = UDim2.new(0.99, 0, 0.89, 0)
                                    
                                    if not string.find(title.Text, " | ") then
                                        title.Text = title.Text .. " | " .. string.sub(uid, 1, 8)
                                    end
                                    
                                    local levelNumber = tonumber(string.match(level.Text, "%d+"))
                                    
                                    if levelNumber then
                                        table.insert(petData, { uid = uid, level = levelNumber })
                                    end
                                end
                            end
                        end
                        
                        table.sort(petData, function(a, b) return b.level < a.level end)
                        local sortedUid = {}
                        for _, data in ipairs(petData) do
                            table.insert(sortedUid, data.uid)
                        end
                        
                        return sortedUid
                    end
                -- ===== ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•Pet‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ôPets ======

                -- ==== ‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô‡∏™‡πà‡∏á Pet ‡πÑ‡∏õ‡∏ï‡∏µ‡∏°‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á Trial ======
                    local function SendPet(Obj)
                        pcall(function()
                        local f = require(game:GetService("Players").LocalPlayer.PlayerScripts.StarX)
                        local bridges = f["Bridge"]
                        local fireserver = bridges["FireServer"]
                        local utils = f["Utils"]
                        local pet = utils["Pet"]
                        local getmodel = pet["Get_All_Pets_Models"]

                        for i,v in pairs(f["Data"]["Pets_Equipped"]) do
                            fireserver(fireserver,"General","Pets","Attack",i,Obj)
                            wait(0.125)
                        end
                    end)
                    end
                    
                -- ==== ‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô‡∏™‡πà‡∏á Pet ‡πÑ‡∏õ‡∏ï‡∏µ‡∏°‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á Trial ======
                
                -- ==== ‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô tp pet to mon ======
                    local function extractUserData(data)
                        local username, userId = data:match("^(.-)---([a-f0-9%-]+)$")
                        return username, userId:sub(1, 2) == "--" and userId:sub(3) or userId
                    end
                    
                    local function findNearestBossEnemy(ss)
                        local selectedMap: Instance = maps:GetChildren()[1] -- ‡∏î‡∏∂‡∏á map ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏≤
                        local enemies = enemiesFolder:FindFirstChild(selectedMap.Name) -- ‡∏î‡∏∂‡∏á enemies ‡∏Ç‡∏≠‡∏á map ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
                        local newSelectedMap = maps:GetChildren()[1]  -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö map ‡πÉ‡∏´‡∏°‡πà
                    
                        if newSelectedMap ~= selectedMap then
                            selectedMap = newSelectedMap  -- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï selectedMap
                            enemies = enemiesFolder:FindFirstChild(selectedMap.Name)  -- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï enemies ‡∏Ç‡∏≠‡∏á map ‡πÉ‡∏´‡∏°‡πà
                        end
                    
                        if enemies then
                            local playerPos = player.Character:WaitForChild("HumanoidRootPart").Position
                            local foundEnemy, enemyToSend, enemyCFrame = false, nil, nil
                            for _, enemy in pairs(enemies:GetChildren()) do
                                local dist = (enemy.CFrame.Position - playerPos).Magnitude
                                local health = enemy:GetAttribute("Health")
                                local GetEnemies_Difficult = enemy:GetAttribute("Difficult")
                    
                                if health and health > 0 and dist <= 150 and "Boss" == GetEnemies_Difficult then
                                    foundEnemy, enemyToSend, enemyCFrame = true, enemy, enemy.CFrame
                                    break
                                end
                            end
                            if foundEnemy then
                                return enemyToSend, enemyCFrame
                            end
                        end
                        return nil, nil
                    end

                    local function movePetToEnemy(pet, enemyCFrame)
                        -- ‡∏¢‡πâ‡∏≤‡∏¢ Pet ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á enemy
                        pet.HumanoidRootPart.CFrame = CFrame.new(enemyCFrame.Position)
                    end
                    
                    local function attackEnemyWithPet(pet, enemyToSend)
                        -- ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ Pet ‡πÇ‡∏à‡∏°‡∏ï‡∏µ enemy
                        local username, userId = extractUserData(pet.Name)
                        if username == player.Name then
                            Remote:FireServer("General", "Pets", "Attack", userId, enemyToSend)
                        end
                    end


                    local function findEnemy(area, Difficult_p)
                        local minHealth = math.huge
                        local targetEnemy = nil
                    
                        
                        if enemy:GetAttribute("Health") and enemy:GetAttribute("Health") > 0 then
                            local Difficult = enemy:GetAttribute("Difficult")
                            local dist = (enemy.CFrame.Position - playerPos).Magnitude
                            local health = enemy:GetAttribute("Health")
                            if health < minHealth and Difficult_p == Difficult then
                                minHealth = health
                                targetEnemy = enemy
                            end
                        end
                    
                        return targetEnemy
                    end

                    local function findLowestHealthEnemy(area)
                        local minHealth = math.huge
                        local targetEnemy = nil
                    
                        for _, enemy in pairs(area:GetChildren()) do
                            if enemy:GetAttribute("Health") and enemy:GetAttribute("Health") > 0 then
                                local health = enemy:GetAttribute("Health")
                                if health < minHealth then
                                    minHealth = health
                                    targetEnemy = enemy
                                end
                            end
                        end
                    
                        return targetEnemy
                    end
                    
                    local function moveToTarget(character, target, distanceThreshold)
                        if (character.HumanoidRootPart.Position - target.Position).Magnitude >= distanceThreshold then
                            character.HumanoidRootPart.CFrame = target.CFrame * CFrame.new(0, 5, -3.5)
                            
                        end
                    end

                    local function moveToTarget2(character, target, distanceThreshold)
                        if not Base then
                            getgenv().Base = Instance.new("Part")
                            Base.Parent = workspace
                            Base.Size = Vector3.new(5, 0.5, 5)
                            Base.CanCollide = true
                            Base.Anchored = true
                            Base.Transparency = 0
                        end
                        if (character.HumanoidRootPart.Position - target.Position).Magnitude >= distanceThreshold then
                            character.HumanoidRootPart.CFrame = target.CFrame * CFrame.new(0, 5, -3.5)
                            Base.CFrame = targetIsland.CFrame * CFrame.new(0, 1, 5)
                        end
                    end
                    
                    local function sendPetsToAttack(enemy)
                        for _, pet: Instance in pairs(petsFolder:GetChildren()) do
                            local username = extractUserData(pet.Name)
                            if username == player.Name then
                                if (pet.HumanoidRootPart.Position - enemy.Position).Magnitude >= 15 then
                                    movePetToEnemy(pet, enemy.CFrame)
                                    wait(0.05)
                                    attackEnemyWithPet(pet, enemy)
                                end
                            end
                        end
                    end
                    
                    -- local function handlePets(petsFolder, enemy)
                    --     for _, pet in pairs(petsFolder:GetChildren()) do
                    --         local username, _ = extractUserData(pet.Name)
                    --         if username == player.Name then
                    --             movePetToEnemy(pet, enemy.CFrame)
                    --             wait(0.1)
                    --             attackEnemyWithPet(pet, enemy)
                    --         end
                    --     end
                    -- end

                    
                -- ==== ‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô tp pet to mon ======
                

                -- ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏®‡∏±‡∏ï‡∏£‡∏π‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î

                -- ‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡πá‡∏Ñ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÑ‡∏õ Discord Trial ======
                    local function SendWebhookCheckItem(title)
                        local player = game.Players.LocalPlayer
                    
                        -- ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥
                        local currentItemsData = GetItemsData()
                    
                        -- ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á
                        local itemDifferences = {}
                        for itemName, previousAmount in pairs(previousItemsData) do
                            local currentAmount = currentItemsData[itemName] or 0
                            local difference = currentAmount - previousAmount
                    
                            -- ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á
                            table.insert(itemDifferences, {
                                name = itemName,
                                difference = difference,
                                currentAmount = currentAmount
                            })
                        end
                    
                        -- ‡πÅ‡∏¢‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°
                        local sortedItems = SortItems(currentItemsData)
                    
                        -- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
                        local formattedItems = ""

                        -- ‡∏™‡∏£‡πâ‡∏≤‡∏á fields ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
                        local fields = {}

                        -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô fields ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Item Normal
                        local itemNormalText = ""
                        for _, item in ipairs(sortedItems.important) do
                            local changeText = ""
                            for _, diff in ipairs(itemDifferences) do
                                if diff.name == item.name then
                                    changeText = (diff.difference > 0 and "+"..diff.difference.." " or "")
                                end
                            end
                            itemNormalText = itemNormalText .. changeText .. item.name .. " [" .. formatnum(item.amount) .. "]\n"
                        end
                        table.insert(fields, {name = "Item Normal", value = itemNormalText, inline = true})

                        table.insert(fields, {name = "", value = "", inline = true})
                        -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô fields ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Item Evo
                        local itemEvoText = ""
                        for _, item in ipairs(sortedItems.evo) do
                            local changeText = ""
                            for _, diff in ipairs(itemDifferences) do
                                if diff.name == item.name then
                                    changeText = (diff.difference > 0 and "+"..diff.difference.." " or "")
                                end
                            end
                            itemEvoText = itemEvoText .. changeText .. item.name .. " [" .. formatnum(item.amount) .. "]\n"
                        end
                        table.insert(fields, {name = "Item Evo", value = itemEvoText, inline = true})


                        -- print(formattedItems)
                        local coinsText = game.Players.LocalPlayer:WaitForChild("PlayerGui")
                                :WaitForChild("UI"):WaitForChild("HUD")
                                :WaitForChild("Left_Container"):WaitForChild("Currency")
                                :WaitForChild("Coins"):WaitForChild("Container")
                                :WaitForChild("Amount").Text
                        -- ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                        sendToDiscord(
                            title,
                            "Currency : ".. coinsText .."",
                            fields,
                            -- {
                            --     -- {name = "Currency", value = "```" .. coinsText .. "```", inline = false},
                            --     {name = "**Items List**", value = "\n" .. formattedItems .. "", inline = false},
                            -- },
                            whItemInput,
                            tonumber(0x1f80d5),
                            nil,
                            false
                        )
                    end
                -- ‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡πá‡∏Ñ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÑ‡∏õ Discord Trial ======

                -- ‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡πá‡∏Ñ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÑ‡∏õ Discord Dungeon======
                    local function SendWebhookCheckItem2()
                        local player = game.Players.LocalPlayer
                    
                        -- ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥
                        local currentItemsData = GetItemsData()
                    
                        -- ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á
                        local itemDifferences = {}
                        for itemName, previousAmount in pairs(previousItemsData) do
                            local currentAmount = currentItemsData[itemName] or 0
                            local difference = currentAmount - previousAmount
                    
                            -- ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á
                            table.insert(itemDifferences, {
                                name = itemName,
                                difference = difference,
                                currentAmount = currentAmount
                            })
                        end
                    
                        -- ‡πÅ‡∏¢‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°
                        local sortedItems = SortItems(currentItemsData)
                    
                        -- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
                        local formattedItems = ""
                        -- ‡∏™‡∏£‡πâ‡∏≤‡∏á fields ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
                        local fields = {}

                        -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô fields ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Item Normal
                        local itemNormalText = ""
                        for _, item in ipairs(sortedItems.important) do
                            local changeText = ""
                            for _, diff in ipairs(itemDifferences) do
                                if diff.name == item.name then
                                    changeText = (diff.difference > 0 and "+"..diff.difference.." " or "")
                                end
                            end
                            itemNormalText = itemNormalText .. changeText .. item.name .. " [" .. formatnum(item.amount) .. "]\n"
                        end
                        table.insert(fields, {name = "Item Normal", value = itemNormalText, inline = true})


                        table.insert(fields, {name = "", value = "", inline = true})
                        -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô fields ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Chest
                        local chestText = ""
                        for _, item in ipairs(sortedItems.chests) do
                            local changeText = ""
                            for _, diff in ipairs(itemDifferences) do
                                if diff.name == item.name then
                                    changeText = (diff.difference > 0 and "+"..diff.difference.." " or "")
                                end
                            end
                            chestText = chestText .. changeText .. item.name .. " [" .. formatnum(item.amount) .. "]\n"
                        end
                        table.insert(fields, {name = "Chest", value = chestText, inline = true})


                        -- print(formattedItems)
                        local coinsText = game.Players.LocalPlayer:WaitForChild("PlayerGui")
                                :WaitForChild("UI"):WaitForChild("HUD")
                                :WaitForChild("Left_Container"):WaitForChild("Currency")
                                :WaitForChild("Coins"):WaitForChild("Container")
                                :WaitForChild("Amount").Text
                        -- ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                        sendToDiscord(
                            "Dungeon",
                            "Currency : ".. coinsText .."",
                            fields,
                            -- {
                            --     -- {name = "Currency", value = "```" .. coinsText .. "```", inline = false},
                            --     {name = "**Items List**", value = "\n" .. formattedItems .. "", inline = false},
                            -- },
                            whItemInput,
                            tonumber(0x1f80d5),
                            nil,
                            false
                        )
                    end
                -- ‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡πá‡∏Ñ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÑ‡∏õ Discord Dungeon======

                -- ‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡πá‡∏Ñ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÑ‡∏õ Discord Xmas Defense======
                    local function SendWebhookCheckItem3()

                        local player = game.Players.LocalPlayer
                    
                        -- ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥
                        local currentItemsData = GetItemsData()
                    
                        -- ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á
                        local itemDifferences = {}
                        for itemName, previousAmount in pairs(previousItemsData) do
                            local currentAmount = currentItemsData[itemName] or 0
                            local difference = currentAmount - previousAmount
                    
                            -- ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á
                            table.insert(itemDifferences, {
                                name = itemName,
                                difference = difference,
                                currentAmount = currentAmount
                            })
                        end
                    
                        -- ‡πÅ‡∏¢‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°
                        local sortedItems = SortItems(currentItemsData)
                    
                        -- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
                        local formattedItems = ""

                        -- ‡∏™‡∏£‡πâ‡∏≤‡∏á fields ‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
                        local fields = {}

                        -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô fields ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Item Normal
                        local itemNormalText = ""
                        for _, item in ipairs(sortedItems.important) do
                            local changeText = ""
                            for _, diff in ipairs(itemDifferences) do
                                if diff.name == item.name then
                                    changeText = (diff.difference > 0 and "+"..diff.difference.." " or "")
                                end
                            end
                            itemNormalText = itemNormalText .. changeText .. item.name .. " [" .. formatnum(item.amount) .. "]\n"
                        end
                        table.insert(fields, {name = "Item Normal", value = itemNormalText, inline = true})

                        table.insert(fields, {name = "", value = "", inline = true})
                        -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô fields ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Item Evo
                        local itemAccessoriesText = ""
                        for _, item in ipairs(sortedItems.accessories) do
                            local changeText = ""
                            for _, diff in ipairs(itemDifferences) do
                                if diff.name == item.name then
                                    changeText = (diff.difference > 0 and "+"..diff.difference.." " or "")
                                end
                            end
                            itemAccessoriesText = itemAccessoriesText .. changeText .. item.name .. " [" .. formatnum(item.amount) .. "]\n"
                        end
                        table.insert(fields, {name = "Item Accessories", value = itemAccessoriesText, inline = true})

                        -- print(formattedItems)
                        local coinsText = game.Players.LocalPlayer:WaitForChild("PlayerGui")
                                :WaitForChild("UI"):WaitForChild("HUD")
                                :WaitForChild("Left_Container"):WaitForChild("Currency")
                                :WaitForChild("Coins"):WaitForChild("Container")
                                :WaitForChild("Amount").Text
                        -- ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                        sendToDiscord(
                            "Dungeon",
                            "Currency : ".. coinsText .."",
                            fields,
                            -- {
                            --     -- {name = "Currency", value = "```" .. coinsText .. "```", inline = false},
                            --     {name = "**Items List**", value = "\n" .. formattedItems .. "", inline = false},
                            -- },
                            whItemInput,
                            tonumber(0x1f80d5),
                            nil,
                            false
                        )
                    end
                -- ‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ä‡πá‡∏Ñ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏°‡πÑ‡∏õ Discord Xmas Defense======
                
                -- ===================================== End Function Group =====================================
                -- ===================================== End Function Group =====================================
                -- ===================================== End Function Group =====================================
                -- ===================================== End Function Group =====================================
                -- ===================================== End Function Group =====================================
                -- ===================================== End Function Group =====================================
                -- ===================================== End Function Group =====================================
                -- ===================================== End Function Group =====================================
                -- ===================================== End Function Group =====================================
            -- ==================================== End Function Group ==============================
            -- ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Attributes
            player:SetAttribute("Run", true)
            player:SetAttribute("AutoClick", true)
            -- ==================================== Portal Mode =====================================
                local portalNames = {}
                local portalNames2 = {}
                local portalNames3 = {}
                local portalNames5 = {}
                
                for _, portal in pairs(workspace.Server:WaitForChild("Teleport"):GetChildren()) do
                    if portal:IsA("Part") then table.insert(portalNames, portal.Name) end
                    if portal:IsA("Part") then table.insert(portalNames2, portal.Name) end
                    if portal:IsA("Part") then table.insert(portalNames3, portal.Name) end
                    if portal:IsA("Part") then table.insert(portalNames5, portal.Name) end
                end
                local dropdownValue = portalNames[1] or "Default"
                local dropdownValue2 = portalNames2[1] or "Default"
                local dropdownValue3 = portalNames3[1] or "Default"
                local dropdownValue5 = portalNames5[1] or "Default"

                local portalNames4 = {}
                for _, portal in pairs(workspace.Server:WaitForChild("Raids"):GetChildren()) do
                    if portal:IsA("Folder") then table.insert(portalNames4, portal.Name) end
                end
                local dropdownValue4 = portalNames4[1] or "Default"
            -- ==================================== Portal Mode =====================================

            -- ==================================== AutoFramNear ====================================
                local Main_AutoFarm = Tabs.Main:AddSection("Auto Farm")
                local Enemies_Difficult = nil
                local Dropdown_AutoFarm = Main_AutoFarm:AddDropdown("Dropdown_AutoFarm", {
                    Title = "Select Difficult",
                    Description = "Select Difficult Auto Farm",
                    Values = {"Boss", "Insane", "Hard", "Medium", "Easy"},
                    Multi = true,
                    Default = {"Boss", "Insane"},
                })
                local SelectedDifficulties = {}
                -- Dropdown_AutoFarm:SetValue("Boss")
                -- Dropdown_AutoFarm:OnChanged(function(Value)
                --     Enemies_Difficult = Value 
                -- end)
                Dropdown_AutoFarm:OnChanged(function(Value)
                    SelectedDifficulties = {}
                    for Difficulty, State in next, Value do
                        if State then
                            table.insert(SelectedDifficulties, Difficulty)
                        end
                    end
                    -- print("Selected difficulties:", table.concat(SelectedDifficulties, ", "))
                end)
                local Toggle_AutoFarmAll = Main_AutoFarm:AddToggle("Toggle_AutoFarmAll", { Title = "Auto Farm", Default = false })
                Toggle_AutoFarmAll:OnChanged(function()
                    if Toggle_AutoFarmAll.Value then
                        _G.autoframAll = true
                        _G.autoframAllC = true
                    else
                        _G.autoframAll = false
                        _G.autoframAllC = false
                    end
                end)
                Options.Toggle_AutoFarmAll:SetValue(false) 

            
                spawn(function()

                    while true do wait(0.125)
                        if _G.autoframAll then
                            pcall(function()
                                local newSelectedMap = maps:GetChildren()[1]  -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö map ‡πÉ‡∏´‡∏°‡πà
                                if newSelectedMap ~= selectedMap then
                                    selectedMap = newSelectedMap  -- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï selectedMap
                                    enemies = enemiesFolder:FindFirstChild(selectedMap.Name)  -- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï enemies ‡∏Ç‡∏≠‡∏á map ‡πÉ‡∏´‡∏°‡πà
                                end
                
                                if enemies then
                                    local playerPos = player.Character:WaitForChild("HumanoidRootPart").Position
                                    local foundEnemy, enemyToSend = false, nil
                
                                    -- ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ enemy ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏Å‡∏•‡πâ‡πÜ player
                                    for _, enemy in pairs(enemies:GetChildren()) do
                                        local dist = (enemy.CFrame.Position - playerPos).Magnitude
                                        local health = enemy:GetAttribute("Health")
                                        local GetEnemies_Difficult = enemy:GetAttribute("Difficult")
                                        if health and health > 0 and table.find(SelectedDifficulties, GetEnemies_Difficult) then
                                            foundEnemy, enemyToSend = true, enemy
                                            break
                                        end
                                    end
                
                                    -- ‡∏ñ‡πâ‡∏≤‡∏û‡∏ö enemy ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÇ‡∏à‡∏°‡∏ï‡∏µ
                                    if foundEnemy then
                                        sendPetsToAttack(enemyToSend)
                                    end
                                end
                            end)
                        end
                    end
                end)

            -- ==================================== AutoFramNear ====================================
            
            -- ==================================== Auto Click | Auto Collect =======================
                spawn(function()
                    while true do
                        wait(0.125)
                        if _G.autoclick then
                            pcall(function()
                                Remote:FireServer("Enemies","World","Click")
                            end)
                        end
                    end
                end)
                local Toggle_AutoClick = Main_AutoFarm:AddToggle("MyToggle_AutoClick", { Title = "Auto Click Fast", Default = false })
                Toggle_AutoClick:OnChanged(function()
                    if Toggle_AutoClick.Value then
                        _G.autoclick = true
                    else
                        _G.autoclick = false
                    end
                end)
                Options.MyToggle_AutoClick:SetValue(false)

                local Toggle_AutoCollect = Main_AutoFarm:AddToggle("MyToggle_AutoCollect", { Title = "Auto Collect", Default = false })
                Toggle_AutoCollect:OnChanged(function()
                    if Toggle_AutoCollect.Value then
                        _G.autoCollect = true
                    else
                        _G.autoCollect = false
                    end
                end)
                Options.MyToggle_AutoCollect:SetValue(false)
                spawn(function()
                    while true do wait(2.5)
                        if _G.autoCollect then
                            local drops = game:GetService("Workspace").Client.Drops:GetChildren()
                            for _, drop in ipairs(drops) do
                                local uuid = drop.Name -- ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô Attribute ‡∏Ç‡∏≠‡∏á Object
                                Remote:FireServer("General", "Drops", "Collect", uuid)
                            end
                        end
                    end
                end)
            -- ==================================== Auto Click | Auto Collect =======================

            -- ==================================== AutoEgg =========================================
                local Main_AutoEgg = Tabs.Main:AddSection("Auto Hatch")
                local Toggle_AutoEgg = Main_AutoEgg:AddToggle("MyToggle_AutoEgg", { Title = "Auto Hatch", Default = false })
                Toggle_AutoEgg:OnChanged(function()
                    if Toggle_AutoEgg.Value then
                        _G.AutoEgg = true
                        _G.AutoEggC = true
                    else
                        _G.AutoEgg = false
                        _G.AutoEggC = false
                    end
                end)
                Options.MyToggle_AutoEgg:SetValue(false)

                local Toggle_HideAnimation = Main_AutoEgg:AddToggle("MyToggle_HideAnimation", { Title = "Hide Animation", Default = false })
                Toggle_HideAnimation:OnChanged(function()
                    if Toggle_HideAnimation.Value then
                        game:GetService("Players").LocalPlayer.PlayerGui.Star.Frame.Visible = false
                    else
                        game:GetService("Players").LocalPlayer.PlayerGui.Star.Frame.Visible = true
                    end
                end)
                Options.MyToggle_HideAnimation:SetValue(false)

                task.spawn(function()
                    while true do wait(0.5)
                        if _G.AutoEgg then
                            local currentMapFolder = game.Workspace.Client.Maps:FindFirstChildWhichIsA("Folder")
                            if currentMapFolder then
                                local mapName = currentMapFolder.Name
                                local arrow = game.Workspace.Server.Stars:FindFirstChild(mapName)
                                if arrow then
                                    local arrowPosition = arrow.Coins:FindFirstChild("Arrow")
                                    if arrowPosition then
                                        local playerPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                                        local distance = (arrowPosition.Position - playerPosition).Magnitude
                                        if distance <= 10 then
                                            game:GetService("VirtualInputManager"):SendKeyEvent(true, "Q", false, game)
                                        else
                                            player.Character.HumanoidRootPart.CFrame = CFrame.new(arrowPosition.Position)
                                        end
                                    end
                                end
                            end
                        end
                    end
                end)
            
                local AutoLoadTeams = Tabs.Main:AddSection("Auto Load Teams : Luck")
                local Toggle_AutoLoadTeamLuck = AutoLoadTeams:AddToggle("MyToggle_AutoLoadTeamLuck", { Title = "Auto Load Luck Teams", Default = false })
                Toggle_AutoLoadTeamLuck:OnChanged(function()
                    if Toggle_AutoLoadTeamLuck.Value then
                        _G.AutoTeamLuck = true
                        _G.AutoTeamLuckC = true
                    else
                        _G.AutoTeamLuck = false
                        _G.AutoTeamLuckC = false
                    end
                end)
                Options.MyToggle_AutoLoadTeamLuck:SetValue(false)
                spawn(function()
                    while true do wait(1)
                        if _G.AutoTeamLuck then
                            Remote:FireServer("General","Pets","Equip_Team","Team2")
                            wait(1)
                            _G.AutoTeamLuck = false
                        end
                    end
                end)
            -- ==================================== AutoEgg =========================================
            
            -- -- ==================================== Auto Fishing =========================================
                --     local Main_AutoFish = Tabs.Main:AddSection("Auto Fishing")
                --     local Toggle_AutoFishing = Main_AutoFish:AddToggle("Toggle_AutoFishing", { Title = "Auto Fishing", Default = false })
                --     Toggle_AutoFishing:OnChanged(function()
                --         if Toggle_AutoFishing.Value then
                --             _G.AutoFishing = true
                --         else
                --             _G.AutoFishing = false
                --         end
                --     end)
                --     Options.Toggle_AutoFishing:SetValue(false)

                --     task.spawn(function()
                --         local VIM = game:GetService('VirtualInputManager')
                --         local Vector = {workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2}
                --         local function Scale(obj)
                --             return obj.Position.Y.Scale
                --         end
                --         game:GetService("Players").LocalPlayer.PlayerGui.ChildAdded:Connect(function(v)
                --             local HUD = v:WaitForChild("HUD")
                --             local Container = HUD:WaitForChild("Container")
                --             local Frame = Container:WaitForChild("Frame")
                --             local Main = Frame:WaitForChild("Main")
                --             local Container = Main:WaitForChild("Container")
                --             local Bar = Container:WaitForChild("Bar")
                --             local FishContain = Main:WaitForChild("FishContainement")
                --             local Fish = FishContain:WaitForChild("Fish")
                --             local Hold = false
                --             while task.wait() and v.Parent do
                --                 if _G.AutoFishing then
                --                     if Scale(Bar) < Scale(Fish) - .0015 then
                --                         -- print("Stop hold")
                --                         if Hold then
                --                             VIM:SendMouseButtonEvent(Vector[1],Vector[2], 0, false, game, 1)
                --                             Hold = false
                --                         end
                --                     else
                --                         -- print("holding",Hold)
                --                         if Hold then
                --                         else
                --                             VIM:SendMouseButtonEvent(Vector[1],Vector[2], 0, true, game, 1)
                --                             Hold = true
                --                         end
                --                     end
                --                 end
                --             end
                --         end)
                --         while true do wait(1)
                --             if _G.AutoFishing then
                --                 if not game:GetService("Players").LocalPlayer.PlayerGui.UI.HUD.Fishing.Visible then
                --                     VIM:SendMouseButtonEvent(Vector[1],Vector[2], 0, true, game, 1)
                --                     VIM:SendMouseButtonEvent(Vector[1],Vector[2], 0, false, game, 1)
                --                     wait(5)
                --                 end
                --             end
                --         end
                --     end)
            -- -- ==================================== Auto Fishing =========================================
            
            local function deadline()
                local currentTimez = os.date("*t") -- ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
                local currentMinute = currentTimez.min
                if (currentMinute >= 9 and currentMinute <= 10) or (currentMinute >= 39 and currentMinute <= 40) then
                    return true
                end
                return false
            end
            local function CHECK1()
                if _G.AutoEggC then
                    _G.AutoEgg = false
                end
                wait(0.1)
                if _G.AutoTeamLuckC then
                    _G.AutoTeamLuck = false
                end
                wait(0.1)
                if _G.autoframAllC then
                    _G.autoframAll = false
                end
            end
            local function CHECK2()
                if _G.AutoEggC then
                    _G.AutoEgg = true
                end
                wait(0.1)
                if _G.AutoTeamLuckC then
                    _G.AutoTeamLuck = true
                end
                wait(0.1)
                if _G.autoframAllC then
                    _G.autoframAll = true
                end
            end
            -- ==================================== TAB_Trial =======================================

                -- local AutoTrial = Tabs.Trial:AddSection("Trial Easy | Join And Farm")
                local Toggle_AutoTrial = Tabs.Trial:AddToggle("Toggle_AutoTrial", { Title = "Auto Join | Farm | Leave", Default = false })
                Toggle_AutoTrial:OnChanged(function()
                    if Toggle_AutoTrial.Value then
                        _G.AutoTrialEasy = true
                    else
                        _G.AutoTrialEasy = false
                    end
                end)
                Options.Toggle_AutoTrial:SetValue(false)
                local LaveroomTrialEasy = nil
                local InputLeaveMap = Tabs.Trial:AddInput("InputLeaveMap", {
                    Title = "Leave Room",
                    Description = "Please specify the room number \n you wish to leave.",
                    Default = 25,
                    Placeholder = "1-50",
                    Numeric = true, -- Only allows numbers
                    Finished = true, -- Only calls callback when you press enter
                    Callback = function(Value)
                        LaveroomTrialEasy = tonumber(Value)
                        ShowNotification("End of trial when arriving in room",tostring(LaveroomTrialEasy))
                    end
                })
                InputLeaveMap:SetValue(25)
                local Dropdown_AutoLeveM = Tabs.Trial:AddDropdown("Dropdown_AutoLeveM", {
                    Title = "Select Map",
                    Description = "Select a map first, enable the Auto Leave function.",
                    Values = portalNames,
                    Multi = false,
                    Default = dropdownValue,
                })
                Dropdown_AutoLeveM:SetValue(dropdownValue)
                Dropdown_AutoLeveM:OnChanged(function(Value)
                    dropdownValue = Value 
                end)

                Tabs.Trial:AddButton({
                    Title = "Save Location",
                    Description = "Click here to save location ",
                    Callback = function()
                        TrialLeveTpmap_Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                        -- setclipboard(tostring(game.Players.LocalPlayer.Character.HumanoidRootPart.Position))

                        ShowNotification("End Trial and Teleport To Map and Location",tostring(game.Players.LocalPlayer.Character.HumanoidRootPart.Position))
                    end
                })
                Tabs.Trial:AddButton({
                    Title = "Go Location",
                    Description = "Test Go To Location",
                    Callback = function()
                        if TrialLeveTpmap_Position then
                            player.Character.HumanoidRootPart.CFrame = CFrame.new(TrialLeveTpmap_Position)
                            ShowNotification("Test Teleport Location",tostring(game.Players.LocalPlayer.Character.HumanoidRootPart.Position))
                        end
                    end
                })
                -- auto join trial
                local function isroomTrial()
                    local roomValueTrial = game.Players.LocalPlayer.PlayerGui.UI.HUD.Trial.Frame.Room.Value.Text
                    local roomValueTrial = tonumber(roomValueTrial)
                    if roomValueTrial and roomValueTrial == LaveroomTrialEasy and roomValueTrial ~= 0 then
                        return true
                    end
                    return false
                end
                local checktrial = false
                spawn(function()
                    while true do 
                        wait(0.125)
                        if _G.AutoTrialEasy then
                            if not game:GetService("Players").LocalPlayer.PlayerGui.UI.HUD.Trial.Visible then
                                if workspace.Server.Trial.Lobby.Easy_Door:GetAttribute("Opened") then
                                    jack("TrialEasy", "Post", true)
                                    if jack("TrialEasy","Get") then
                                        print("Entered TrialEasy logic")
                                        wait(2)
                                        CHECK1()
                                        for i = 1, 3 do
                                            Remote:FireServer("General", "Teleport", "Teleport", "Leaf Village")
                                            wait(0.15)
                                        end
                                        wait(9)
                                        Remote:FireServer("Enemies","Trial_Easy","Join")
                                        wait(1.5)  
                                        Remote:FireServer("General","Pets","Equip_Team","Team1") 
                                        wait(0.25)
                                        previousItemsData = GetItemsData()    
                                        checktrial = true
                                    end
                                else
                                    jack("TrialEasy", "Post", false)
                                    wait(1)
                                end
                            elseif isroomTrial() then
                                if checktrial then
                                    wait(1.25)
                                    for i = 1, 3 do
                                        Remote:FireServer("General", "Teleport", "Teleport", "Leaf Village")
                                        wait(0.15)
                                    end
                                    wait(2)
                                    Remote:FireServer("General", "Teleport", "Teleport", dropdownValue)
                                    game.Players.LocalPlayer.PlayerGui.UI.HUD.Trial.Frame.Room.Value.Text = "0"
                                    if TrialLeveTpmap_Position ~= nil then
                                        wait(1.25)
                                        player.Character.HumanoidRootPart.CFrame = CFrame.new(TrialLeveTpmap_Position)
                                    end
                                    wait(0.5)
                                    SendWebhookCheckItem("Trial Easy")
                                    wait(0.5)
                                    CHECK2()
                                    checktrial = false
                                    wait(1.5)
                                    jack("TrialEasy","Post",false)
                                end
                            else
                                if checktrial then
                                    jack("TrialEasy","Post",true)
                                    if jack("TrialEasy","Get") then
                                        local function handleEnemy(character, area)
                                            local enemy = findLowestHealthEnemy(area)
                                            if enemy and enemy.Parent then
                                                repeat
                                                    moveToTarget(character, enemy, 15)
                                                    sendPetsToAttack(enemy)
                                                    wait(0.25)
                                                until not enemy:GetAttribute("Health") or enemy:GetAttribute("Health") <= 0 or not enemy.Parent or not _G.AutoTrialEasy
                                            end
                                        end
                                        local function main()
                                            local character = player.Character or player.CharacterAdded:Wait()
                                            local targetArea = workspace.Server.Trial.Enemies.Easy
                                            handleEnemy(character, targetArea)
                                        end
                                        main()
                                    end
                                end
                            end
                           
                        end
                    end
                end)

            -- ==================================== TAB_Trial =======================================
            
            -- ==================================== TAB_DUNGEON  ====================================
                -- local AutoDungeon = Tabs.Dungeon:AddSection("Dungeon")
                local Toggle_AutoDunJoin = Tabs.Dungeon:AddToggle("MyToggle_AutoDunJoin", { Title = "Join | Farm | Leave", Default = false })
                Toggle_AutoDunJoin:OnChanged(function()
                    if Toggle_AutoDunJoin.Value then
                        _G.AutoDungeon = true
                    else
                        _G.AutoDungeon = false
                    end
                end)
                Options.MyToggle_AutoDunJoin:SetValue(false)
                local LaveroomDun = nil
                local InputLeaveMap2 = Tabs.Dungeon:AddInput("InputLeaveMap2", {
                    Title = "Leave Room",
                    Description = "Please specify the room number \n you wish to leave.",
                    Default = 20,
                    Placeholder = "1-50",
                    Numeric = true, -- Only allows numbers
                    Finished = true, -- Only calls callback when you press enter
                    Callback = function(Value)
                        LaveroomDun = tonumber(Value) 
                        ShowNotification("End of Dungeon when arriving in room",tostring(LaveroomDun))
                    end
                })
                InputLeaveMap2:SetValue(20)
                local Dropdown_AutoLeaveM = Tabs.Dungeon:AddDropdown("Dropdown_AutoLeaveM", {
                    Title = "Select Map",
                    Description = "Select a map first, enable the Auto Leave function.",
                    Values = portalNames,
                    Multi = false,
                    Default = dropdownValue3,
                })
                Dropdown_AutoLeaveM:SetValue(dropdownValue3)
                Dropdown_AutoLeaveM:OnChanged(function(Value)
                    dropdownValue3 = Value 
                end)

                Tabs.Dungeon:AddButton({
                    Title = "Save Location",
                    Description = "Click here to save location ",
                    Callback = function()
                        DunLeveTpmap_Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                        ShowNotification("End Trial and Teleport To Map and Location",tostring(game.Players.LocalPlayer.Character.HumanoidRootPart.Position))
                        
                    end
                })
                Tabs.Dungeon:AddButton({
                    Title = "Go Location",
                    Description = "Test Go To Location",
                    Callback = function()
                        if DunLeveTpmap_Position then
                            player.Character.HumanoidRootPart.CFrame = CFrame.new(DunLeveTpmap_Position)
                            ShowNotification("Test Teleport Location",tostring(game.Players.LocalPlayer.Character.HumanoidRootPart.Position))
                        end
                    end
                })
                local function isroomDungeon()
                    local roomValueDun = game.Players.LocalPlayer.PlayerGui.UI.HUD.Trial.Frame.Room.Value.Text
                    local roomValueDun2 = tonumber(roomValueDun)
                    if roomValueDun2 and roomValueDun2 == LaveroomDun and roomValueDun2 ~= 0 then
                        return true
                    end
                    return false
                end
                -- auto join dungeon
                local checkdungeon = false
                spawn(function()
                    while true do wait(0.125)
                        if _G.AutoDungeon then
                            pcall(function()
                                
                                if not game:GetService("Players").LocalPlayer.PlayerGui.UI.HUD.Trial.Visible then
                                    if workspace.Server.Trial.Lobby.Dungeon_Door:GetAttribute("Opened") then
                                        jack("Dungeon","Post",true)
                                        if jack("Dungeon","Get") then
                                            wait(2)
                                            CHECK1()
                                            for i = 1, 3 do
                                                Remote:FireServer("General", "Teleport", "Teleport", "Leaf Village")
                                                wait(0.15)
                                            end
                                            wait(9)
                                            Remote:FireServer("Enemies","Trial_Dungeon","Join")
                                            wait(1.5)
                                            Remote:FireServer("General","Pets","Equip_Team","Team1")     
                                            wait(0.25)
                                            previousItemsData = GetItemsData()              
                                            checkdungeon = true
                                        end
                                    else
                                        jack("Dungeon","Post",false)
                                        wait(1)
                                    end
                                elseif isroomDungeon() then
                                    if checkdungeon then
                                        wait(1.25)
                                        for i = 1, 3 do
                                            Remote:FireServer("General", "Teleport", "Teleport", "Leaf Village")
                                            wait(0.15)
                                        end
                                        wait(2)
                                        Remote:FireServer("General", "Teleport", "Teleport", dropdownValue3)
                                        if TrialLeveTpmap_Position ~= nil then
                                            wait(1.25)
                                            player.Character.HumanoidRootPart.CFrame = CFrame.new(DunLeveTpmap_Position)
                                        end
                                        game.Players.LocalPlayer.PlayerGui.UI.HUD.Trial.Frame.Room.Value.Text = "0"
                                        SendWebhookCheckItem2()
                                        wait(2)
                                        CHECK2()
                                        wait(1.5)
                                        checkdungeon = false
                                        jack("Dungeon","Post",false)
                                    end
                                else
                                    if checkdungeon then
                                        jack("Dungeon","Post",true)
                                        if jack("Dungeon","Get") then
                                            local function handleEnemy(character, area)
                                                local enemy = findLowestHealthEnemy(area)
                                                if enemy and enemy.Parent then
                                                    repeat
                                                        moveToTarget(character, enemy, 15)
                                                        sendPetsToAttack(enemy)
                                                        wait(0.05)
                                                    until not enemy:GetAttribute("Health") or enemy:GetAttribute("Health") <= 0 or not enemy.Parent or not _G.AutoDungeon
                                                end
                                            end
                                            local function main()
                                                local character = player.Character or player.CharacterAdded:Wait()
                                                local targetArea = workspace.Server.Trial.Enemies.Dungeon
                                                handleEnemy(character, targetArea)
                                            end
                                            main()
                                        end
                                    end
                                    
                                end
                            end)
                        end
                    end
                end)

                
                -- ======= auto leave Dungeon ===========
                
            -- ==================================== TAB_DUNGEON  ====================================

            -- ==================================== TimeRoom ========================================
                local TimeRoom_AutoFarm = Tabs.TimeRoom:AddSection("Time Room")
                local Toggle_AutoFarmTR = TimeRoom_AutoFarm:AddToggle("MyToggle_AutoFarmTR", { Title = "Auto Farm", Default = false })
                Toggle_AutoFarmTR:OnChanged(function()
                    if Toggle_AutoFarmTR.Value then
                        _G.AutoTimeRoom = true
                    else
                        _G.AutoTimeRoom = false
                    end
                end)
                Options.MyToggle_AutoFarmTR:SetValue(false)
                task.spawn(function()
                    while true do wait(0.2)
                        if _G.AutoTimeRoom then
                            pcall(function()
                                local function handleEnemy(character, area)
                                    local enemy = findLowestHealthEnemy(area)
                                    if enemy and enemy.Parent then
                                        repeat
                                            moveToTarget2(character, enemy, 15)
                                            sendPetsToAttack(enemy)
                                            wait(0.05)
                                        until not enemy:GetAttribute("Health") or enemy:GetAttribute("Health") <= 0 or not enemy.Parent or not _G.AutoTimeRoom
                                    end
                                end
                                local function main()
                                    local character = player.Character or player.CharacterAdded:Wait()
                                    local targetArea = workspace.Server.Enemies.TimeRoom
                                    handleEnemy(character, targetArea)
                                end
                                main()   
                            end)
                        end
                    end
                end)
            -- ==================================== TimeRoom ========================================

            -- ==================================== Raid ============================================
                local RaidSec = Tabs.TimeRoom:AddSection("Raid")
                local Dropdown_AutoRaid = RaidSec:AddDropdown("Dropdown_AutoRaid", {
                    Title = "Select Map",
                    Description = "Select a map Auto Join Raid.",
                    Values = portalNames4,
                    Multi = false,
                    Default = dropdownValue4,
                })
                Dropdown_AutoRaid:SetValue(dropdownValue4)
                Dropdown_AutoRaid:OnChanged(function(Value)
                    dropdownValue4 = Value 
                end)
                local Toggle_AutoFarmRaid = RaidSec:AddToggle("MyToggle_AutoFarmRaid", { Title = "Join | Farm", Default = false })
                Toggle_AutoFarmRaid:OnChanged(function()
                    if Toggle_AutoFarmRaid.Value then
                        _G.AutoRaid = true
                    else
                        _G.AutoRaid = false
                    end
                end)
                Options.MyToggle_AutoFarmRaid:SetValue(false)

                spawn(function()
                    while true do wait(0.25)
                        if _G.AutoRaid then
                            pcall(function()
                                if not game:GetService("Players").LocalPlayer.PlayerGui.UI.HUD.Raid.Visible then
                                    if not game:GetService("Players").LocalPlayer.PlayerGui.UI.HUD.Raid.Visible then
                                        jack("Raid","Post",true)
                                        if jack("Raid","Get") then
                                            wait(2.5)
                                            for i = 1, 3 do
                                                Remote:FireServer("General", "Teleport", "Teleport", "Leaf Village")
                                                wait(0.15)
                                            end
                                            wait(9)
                                            Remote:FireServer("Enemies","Raids","Create",dropdownValue4)
                                            wait(1.5)
                                            Remote:FireServer("General","Pets","Equip_Team","Team1")                           
                                        end
                                    else
                                        jack("Raid","Post",false)
                                        wait(1)     
                                    end
                                else
                                    jack("Raid","Post",true)
                                    if jack("Raid","Get") then
                                        local function handleEnemy(character, area)
                                            local enemy = findLowestHealthEnemy(area)
                                            if enemy and enemy.Parent then
                                                repeat
                                                    moveToTarget(character, enemy, 15)
                                                    sendPetsToAttack(enemy)
                                                    wait(0.25)
                                                until not enemy:GetAttribute("Health") or enemy:GetAttribute("Health") <= 0 or not enemy.Parent or not _G.AutoRaid
                                            end
                                        end
                                        local function main()
                                            local character = player.Character or player.CharacterAdded:Wait()
                                            local targetArea = workspace.Server.Raids[dropdownValue4].Enemies
                                            handleEnemy(character, targetArea)
                                        end
                                        main()
                                    end
                                end
                            end)
                        end
                    end
                end)
            -- ==================================== Raid ============================================

            -- ==================================== TAB_XMASRAID  ====================================
                local XmasRaid = Tabs.XMAS:AddSection("Xmas Raid")
                local Toggle_AutoXmasRaid = XmasRaid:AddToggle("Toggle_AutoXmasRaid", { Title = "Join | Farm | Leave", Default = false })
                Toggle_AutoXmasRaid:OnChanged(function()
                    if Toggle_AutoXmasRaid.Value then
                        _G.AutoXmasRaid = true
                    else
                        _G.AutoXmasRaid = false
                        jack("Xmas Raid","Post",false)
                    end
                end)
                Options.Toggle_AutoXmasRaid:SetValue(false)
                spawn(function()
                    while true do wait(0.125)
                        if _G.AutoXmasRaid then
                            pcall(function()
                                if not game:GetService("Players").LocalPlayer.PlayerGui.UI.HUD.Raid.Visible then
                                    if not game:GetService("Players").LocalPlayer.PlayerGui.UI.HUD.Raid.Visible then
                                        jack("Xmas Raid","Post",true)
                                        if jack("Xmas Raid","Get") then
                                            wait(2.5)
                                            for i = 1, 3 do
                                                Remote:FireServer("General", "Teleport", "Teleport", "XMAS Lobby")
                                                wait(0.15)
                                            end
                                            wait(9)
                                            Remote:FireServer("Enemies","Raids","Create","XMAS Lobby")
                                            wait(1.5)
                                            Remote:FireServer("General","Pets","Equip_Team","Team1")                           
                                        end
                                    else
                                        jack("Xmas Raid","Post",false)
                                        wait(1)
                                    end
                                else
                                    if game:GetService("Players").LocalPlayer.PlayerGui.UI.HUD.Raid.Visible then
                                        jack("Xmas Raid","Post",true)
                                        if jack("Xmas Raid","Get") then
                                            local function handleEnemy(character, area)
                                                local enemy = findLowestHealthEnemy(area)
                                                if enemy and enemy.Parent then
                                                    repeat
                                                        moveToTarget(character, enemy, 15)
                                                        sendPetsToAttack(enemy)
                                                        wait(0.25)
                                                    until not enemy:GetAttribute("Health") or enemy:GetAttribute("Health") <= 0 or not enemy.Parent or not _G.AutoXmasRaid
                                                end
                                            end
                                            local function main()
                                                local character = player.Character or player.CharacterAdded:Wait()
                                                local targetArea = workspace.Server.Raids['XMAS Lobby'].Enemies
                                                handleEnemy(character, targetArea)
                                            end
                                            main()
                                        end
                                    end
                                end
                            end)
                        end
                    end
                end)

            -- ==================================== TAB_XMASRAID  ====================================

            -- ==================================== TAB_XMASDEFENSE  ====================================
                local XmasDefense = Tabs.XMAS:AddSection("Xmas Defense")
                local XDModeValue = nil
                local Select_ModeXD = XmasDefense:AddDropdown("Select_ModeXD", {
                    Title = "Select Mode",
                    Description = "Select a Mode Auto join Xmas Defense.",
                    Values = {1,2,3},
                    Multi = false,
                    Default = 3,
                })
                Select_ModeXD:SetValue(3)
                Select_ModeXD:OnChanged(function(Value)
                    XDModeValue = tonumber(Value) 
                end)
                local LeaveRoomXD = nil
                local LeaveXDInput = XmasDefense:AddInput("LeaveXDInput", {
                    Title = "Leave Room",
                    Description = "Please specify the room number \n you wish to leave.",
                    Default = "15",
                    Placeholder = "1-50",
                    Numeric = true, -- Only allows numbers
                    Finished = true, -- Only calls callback when you press enter
                    Callback = function(Value)
                        LeaveRoomXD = tonumber(Value)
                        ShowNotification("End of Xmas Defense when arriving in room",tostring(LeaveRoomXD))
                    end
                })
                local Toggle_AutoXmasDefense = XmasDefense:AddToggle("Toggle_AutoXmasDefense", { Title = "Join | Farm | Leave", Default = false })
                Toggle_AutoXmasDefense:OnChanged(function()
                    if Toggle_AutoXmasDefense.Value then
                        _G.AutoXmasDefense = true
                    else
                        _G.AutoXmasDefense = false
                        jack("Xmas Defense","Post",false)
                    end
                end)
                Options.Toggle_AutoXmasDefense:SetValue(false)
                spawn(function()
                    while true do wait(0.1,25)
                        if _G.AutoXmasDefense then
                            pcall(function()
                                if not game:GetService("Players").LocalPlayer.PlayerGui.UI.HUD["Christmas Defense"].Visible then
                                    -- if not deadline() then
                                        if not game:GetService("Players").LocalPlayer.PlayerGui.UI.HUD["Christmas Defense"].Visible then
                                            jack("Xmas Defense","Post",true)
                                            if jack("Xmas Defense","Get") then
                                                wait(1.5)
                                                for i = 1, 3 do
                                                    Remote:FireServer("General", "Teleport", "Teleport", "XMAS Lobby")
                                                    wait(0.15)
                                                end
                                                wait(9)
                                                Remote:FireServer("Enemies", "Christmas Defense", "Create", XDModeValue)
                                                wait(1.5)
                                                Remote:FireServer("General","Pets","Equip_Team","Team1")
                                                wait(0.24)
                                                previousItemsData = GetItemsData()
                                                wait(0.24)
                                                game:GetService("Players").LocalPlayer.PlayerGui.UI.HUD["Christmas Defense"].Frame.Room.Value.Text = "0"
                                                wait(0.24)
                                            end
                                        else
                                            jack("Xmas Defense","Post",false)
                                            wait(1)                              
                                        end
                                    -- end
                                elseif isroomXDfense() then
                                    wait(1.25)
                                    for i = 1, 3 do
                                        Remote:FireServer("General", "Teleport", "Teleport", "XMAS Lobby")
                                        wait(0.15)
                                    end
                                    game:GetService("Players").LocalPlayer.PlayerGui.UI.HUD["Christmas Defense"].Frame.Room.Value.Text = "0"
                                    wait(1.25)
                                    SendWebhookCheckItem("Xmas Defense")
                                    wait(2)
                                    jack("Xmas Defense","Post",false)
                                else
                                    jack("Xmas Defense","Post",true)
                                    if jack("Xmas Defense","Get") then
                                        local function handleEnemy(character, area)
                                            local enemy = findLowestHealthEnemy(area)
                                            if enemy and enemy.Parent then
                                                repeat
                                                    moveToTarget(character, enemy, 15)
                                                    sendPetsToAttack(enemy)
                                                    wait(0.25)
                                                until not enemy:GetAttribute("Health") or enemy:GetAttribute("Health") <= 0 or not enemy.Parent or not _G.AutoXmasDefense
                                            end
                                        end
                                        local function main()
                                            local character = player.Character or player.CharacterAdded:Wait()
                                            local targetArea = workspace.Server.Enemies["Christmas Defense"]
                                            handleEnemy(character, targetArea)
                                        end
                                        main()
                                    end
                                end
                            end)
                        end
                    end
                end)
                local Toggle_AutoXmasDefense2 = XmasDefense:AddToggle("Toggle_AutoXmasDefense2", { Title = "Join | Farm | Loop No Leave", Default = false })
                Toggle_AutoXmasDefense2:OnChanged(function()
                    if Toggle_AutoXmasDefense2.Value then
                        _G.AutoXmasDefense2 = true
                    else
                        _G.AutoXmasDefense2 = false
                        jack("Xmas Defense2","Post",false)
                    end
                end)
                Options.Toggle_AutoXmasDefense2:SetValue(false)
                spawn(function()
                    while true do wait(0.125)
                        if _G.AutoXmasDefense2 then
                            pcall(function()
                                if not game:GetService("Players").LocalPlayer.PlayerGui.UI.HUD["Christmas Defense"].Visible then
                                    if not game:GetService("Players").LocalPlayer.PlayerGui.UI.HUD["Christmas Defense"].Visible then
                                        jack("Xmas Defense2","Post",true)
                                        if jack("Xmas Defense2","Get") then
                                            wait(1.5)
                                            for i = 1, 3 do
                                                Remote:FireServer("General", "Teleport", "Teleport", "XMAS Lobby")
                                                wait(0.15)
                                            end
                                            wait(3)
                                            Remote:FireServer("Enemies", "Christmas Defense", "Create", XDModeValue)
                                            wait(1.5)
                                            Remote:FireServer("General","Pets","Equip_Team","Team1")
                                            wait(1)
                                        end
                                    else
                                        jack("Xmas Defense2","Post",false)
                                        wait(1)
                                    end
                                else
                                    jack("Xmas Defense2","Post",true)
                                    if jack("Xmas Defense2","Get") then
                                        local function handleEnemy(character, area)
                                            local enemy = findLowestHealthEnemy(area)
                                            if enemy and enemy.Parent then
                                                repeat
                                                    moveToTarget(character, enemy, 15)
                                                    sendPetsToAttack(enemy)
                                                    wait(0.25)
                                                until not enemy:GetAttribute("Health") or enemy:GetAttribute("Health") <= 0 or not enemy.Parent or not _G.AutoXmasDefense2
                                            end
                                        end
                                        local function main()
                                            local character = player.Character or player.CharacterAdded:Wait()
                                            local targetArea = workspace.Server.Enemies["Christmas Defense"]
                                            handleEnemy(character, targetArea)
                                        end
                                        main()
                                    end
                                end
                            end)
                            if game:GetService("Players").LocalPlayer.PlayerGui.UI.Frames.Defense_Rewards.Visible then
                                wait(0.5)
                                sendRewardsToDiscord()
                                wait(2)
                                for i2,v2 in pairs({"MouseButton1Click", "MouseButton1Down", "Activated"}) do
                                    for i1,v1 in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.UI.Frames.Defense_Rewards.Frame.Close.Button[v2])) do
                                        v1.Function()
                                    end
                                end
                                wait(2)
                            end
                        end
                    end
                end)

            -- ==================================== TAB_XMASDEFENSE  ====================================
    
            -- ==================================== TAB_XMASDUNGEON  ====================================
                local XmasDungeon = Tabs.XMAS:AddSection("Xmas Dungeon")
                local Toggle_AutoXmasDungeon = XmasDungeon:AddToggle("Toggle_AutoXmasDungeon", { Title = "Join | Farm | Leave", Default = false })
                Toggle_AutoXmasDungeon:OnChanged(function()
                    if Toggle_AutoXmasDungeon.Value then
                        _G.AutoXmasDungeon = true
                    else
                        _G.AutoXmasDungeon = false
                    end
                end)
                local Select_MapXDun = XmasDungeon:AddDropdown("Select_MapXDun", {
                    Title = "Select Map",
                    Description = "Select a map first, enable the Auto Leave function.",
                    Values = portalNames5,
                    Multi = false,
                    Default = dropdownValue5,
                })
                Select_MapXDun:SetValue(dropdownValue5)
                Select_MapXDun:OnChanged(function(Value)
                    dropdownValue5 = Value 
                end)
                Options.Toggle_AutoXmasDungeon:SetValue(false)
                local RoomXmasDun = nil
                local LeaveXDunInput = XmasDungeon:AddInput("LeaveXDunInput", {
                    Title = "Leave Room",
                    Description = "Please specify the room number \n you wish to leave.",
                    Default = 15,
                    Placeholder = "11-21",
                    Numeric = true, -- Only allows numbers
                    Finished = true, -- Only calls callback when you press enter
                    Callback = function(Value)
                        RoomXmasDun = tonumber(Value) 
                        ShowNotification("End of Xmas Dungeon when arriving in room",tostring(RoomXmasDun))
                    end
                })
                
                LeaveXDunInput:SetValue(15)
                local Location_XmasDun = nil
                XmasDungeon:AddButton({
                    Title = "Save Location",
                    Description = "Click here to save location ",
                    Callback = function()
                        Location_XmasDun = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                        ShowNotification("End Xmas Dungeon and Teleport To Map and Location",tostring(game.Players.LocalPlayer.Character.HumanoidRootPart.Position))
                    end
                })
                XmasDungeon:AddButton({
                    Title = "Go Location",
                    Description = "Test Go To Location",
                    Callback = function()
                        if Location_XmasDun then
                            player.Character.HumanoidRootPart.CFrame = CFrame.new(Location_XmasDun)
                            ShowNotification("Test Teleport Location",tostring(Location_XmasDun))
                        end
                    end
                })
                local function isroomXDungeon()
                    local RoomXDungeon = player.PlayerGui.UI.HUD["XMAS Dungeon"].Frame.Room.Value.Text
                    local RoomXDungeon = tonumber(RoomXDungeon)
                    if RoomXDungeon and RoomXDungeon == RoomXmasDun and RoomXDungeon ~= 0 then
                        return true
                    end
                    return false
                end
                local function isMobXDungeon()
                    local RoomXDungeon = player.PlayerGui.UI.HUD["XMAS Dungeon"].Frame.Room.Value.Text
                    local MobXDungeon = player.PlayerGui.UI.HUD["XMAS Dungeon"].Frame.Mobs.Value.Text
                    local RoomXDungeon = tonumber(RoomXDungeon)
                    local MobXDungeon = tonumber(MobXDungeon)
                    if MobXDungeon and RoomXDungeon and MobXDungeon == 0 and RoomXDungeon ~= 0 then
                        return true
                    end
                    return false
                end
                spawn(function()
                    while true do wait(0.125)
                        if _G.AutoXmasDungeon then
                            pcall(function()
                                local currentTimezz = os.date("*t") -- ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
                                local currentMinutezz = currentTimezz.min
                                if not game:GetService("Players").LocalPlayer.PlayerGui.UI.HUD["XMAS Dungeon"].Visible then
                                    if (currentMinutezz == 10) or (currentMinutezz == 40) then
                                        jack("Xmas Dungeon","Post",true)
                                        if jack("Xmas Dungeon","Get") then
                                            wait(1.5)
                                            CHECK1()
                                            for i = 1, 3 do
                                                Remote:FireServer("General", "Teleport", "Teleport", "XMAS Lobby")
                                                wait(0.15)
                                            end
                                            wait(9)
                                            Remote:FireServer("Enemies", "XMAS Dungeon", "Join")
                                            wait(1.5)
                                            Remote:FireServer("General","Pets","Equip_Team","Team1")    
                                            previousItemsData = GetItemsData()
                                        else
                                            jack("Xmas Dungeon","Post",false)
                                            wait(1)                              
                                        end
                                    end
                                elseif isroomXDungeon() then
                                    wait(1.5)
                                    for i = 1, 3 do
                                        Remote:FireServer("General", "Teleport", "Teleport", "XMAS Lobby")
                                        wait(0.15)
                                    end
                                    wait(1.5)
                                    Remote:FireServer("General", "Teleport", "Teleport", dropdownValue5)
                                    wait(0.5)
                                    if Location_XmasDun ~= nil then
                                        wait(1.5)
                                        player.Character.HumanoidRootPart.CFrame = CFrame.new(Location_XmasDun)
                                    end
                                    SendWebhookCheckItem("Xmas Dungeon")
                                    game.Players.LocalPlayer.PlayerGui.UI.HUD["XMAS Dungeon"].Frame.Room.Value.Text = "0"
                                    wait(0.1)
                                    CHECK2()
                                    wait(2)
                                    jack("Xmas Dungeon","Post",false)
                                elseif isMobXDungeon() then
                                    wait(1.5)
                                    for i = 1, 3 do
                                        Remote:FireServer("General", "Teleport", "Teleport", "XMAS Lobby")
                                        wait(0.15)
                                    end
                                    wait(1.5)
                                    Remote:FireServer("General", "Teleport", "Teleport", dropdownValue5)
                                    wait(0.5)
                                    if Location_XmasDun ~= nil then
                                        wait(1.5)
                                        player.Character.HumanoidRootPart.CFrame = CFrame.new(Location_XmasDun)
                                    end
                                    SendWebhookCheckItem("Xmas Dungeon")
                                    game.Players.LocalPlayer.PlayerGui.UI.HUD["XMAS Dungeon"].Frame.Room.Value.Text = "0"
                                    wait(0.15)
                                    CHECK2()
                                    wait(2)
                                    jack("Xmas Dungeon","Post",false)
                                else
                                    jack("Xmas Dungeon","Post",true)
                                    if jack("Xmas Dungeon","Get") then
                                        local function handleEnemy(character, area)
                                            local enemy = findLowestHealthEnemy(area)
                                            if enemy and enemy.Parent then
                                                repeat
                                                    moveToTarget(character, enemy, 15)
                                                    sendPetsToAttack(enemy)
                                                    wait(0.25)
                                                until not enemy:GetAttribute("Health") or enemy:GetAttribute("Health") <= 0 or not enemy.Parent or not _G.AutoXmasDungeon
                                            end
                                        end
                                        local function main()
                                            local character = player.Character or player.CharacterAdded:Wait()
                                            local targetArea = workspace.Server.Enemies["XMASDungeon"]
                                            handleEnemy(character, targetArea)
                                        end
                                        main()
                                    end
                                end
                            end)
                        end
                    end
                end)

            -- ==================================== TAB_XMASDUNGEON  ====================================
            
            -- ==================================== XMAS SPECIAL ====================================
                local XmasSpecial = Tabs.XMAS:AddSection("Xmas Special")
                local ToggleXSpecial = XmasSpecial:AddToggle("ToggleXSpecial", { Title = "Auto Farm", Default = false })
                
                ToggleXSpecial:OnChanged(function()
                    if ToggleXSpecial.Value then
                        _G.AutoXmasSpecial = true
                        _G.AutoXmasSpecialC = true
                    else
                        _G.AutoXmasSpecial = false
                        _G.AutoXmasSpecialC = false
                    end
                end)
                
                Options.ToggleXSpecial:SetValue(false)
                
                -- == farm xmas special
                task.spawn(function()
                    while true do wait(0.125)
                        if _G.AutoXmasSpecial then
                            local currentTime = os.date("*t") -- ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
                            local currentMinute = currentTime.min
                            local targetArea = workspace.Server.Enemies["XMAS Lobby"]
                            local mapsFolder = workspace:WaitForChild("Client"):WaitForChild("Maps")
                            local xmasLobbyFolder = mapsFolder:FindFirstChild("XMAS Lobby")
                            pcall(function()
                                if ((currentMinute >= 20 and currentMinute <= 35) or (currentMinute >= 50 or currentMinute <= 5)) then
                                    jack("XmasSpecial","Post",true)
                                    if jack("XmasSpecial","Get") then
                                        if xmasLobbyFolder and xmasLobbyFolder:IsA("Folder") then
                                            if targetArea:FindFirstChildWhichIsA("Part") then
                                                local function handleEnemy(character, area)
                                                    local enemy = findLowestHealthEnemy(area)
                                                    if enemy and enemy.Parent then
                                                        repeat
                                                            moveToTarget(character, enemy, 15)
                                                            sendPetsToAttack(enemy)
                                                            wait(0.25)
                                                        until not enemy:GetAttribute("Health") or enemy:GetAttribute("Health") <= 0 or not enemy.Parent or not _G.AutoXmasSpecial
                                                    end
                                                end
                                                local function main()
                                                    local character = player.Character or player.CharacterAdded:Wait()
                                                    local targetArea = workspace.Server.Enemies["XMAS Lobby"]
                                                    handleEnemy(character, targetArea)
                                                end
                                                main()
                                            end 
                                        elseif not targetArea:FindFirstChildWhichIsA("Part") then
                                            if _G.AutoXmasDungeon then
                                                Remote:FireServer("General", "Teleport", "Teleport", dropdownValue5)
                                                if XmasDunLeveTpmap_Position ~= nil then
                                                    wait(1)
                                                    player.Character.HumanoidRootPart.CFrame = CFrame.new(XmasDunLeveTpmap_Position)
                                                    wait(1)
                                                end
                                            end
                                            wait(2)
                                            jack("XmasSpecial","Post",false)
                                        else
                                            Remote:FireServer("General", "Teleport", "Teleport", "XMAS Lobby")
                                            wait(2)
                                        end
                                    end
                                else
                                    jack("XmasSpecial","Post",false)
                                    wait(1)
                                end
                            end)
                        end
                    end
                end)
            
            -- ==================================== XMAS SPECIAL ====================================

            -- ==================================== TAB_PORTAL  =====================================
                local Dropdown_Teleport = Tabs.Teleport:AddDropdown("Dropdown_Teleport", {
                    Title = "Select Map",
                    Description = "Select the desired map and press the Teleport button.",
                    Values = portalNames2,
                    Multi = false,
                    Default = dropdownValue2,
                })
                Dropdown_Teleport:SetValue(dropdownValue2)
                Dropdown_Teleport:OnChanged(function(Value)
                    dropdownValue2 = Value 
                end)

                Tabs.Teleport:AddButton({
                    Title = "Teleport",
                    Description = "Click here to Teleport the map.",
                    Callback = function()
                        Remote:FireServer("General", "Teleport", "Teleport", dropdownValue2)
                        Remote:FireServer("General", "Teleport", "Teleport", dropdownValue2)
                    end
                })
            -- ==================================== TAB_PORTAL  =====================================
            
            -- ==================================== TAB_MISCELLANEOUS  ==============================
                local Quests_Tickets = Tabs.Miscellaneous:AddSection("Quests Tickets")
                local Toggle_autoTk = Quests_Tickets:AddToggle("MyToggle_autoTk", { Title = "Auto Ticket", Default = false })
                Toggle_autoTk:OnChanged(function()
                    if Toggle_autoTk.Value then
                        _G.autoTicket = true
                    else
                        _G.autoTicket = false
                    end
                end)
                Options.MyToggle_autoTk:SetValue(false)
                local Toggle_autoTkVIP = Quests_Tickets:AddToggle("MyToggle_autoTkVIP", { Title = "Auto TicketVIP", Default = false })
                Toggle_autoTkVIP:OnChanged(function()
                    if Toggle_autoTkVIP.Value then
                        _G.autoTicketVIP = true
                    else
                        _G.autoTicketVIP = false
                    end
                end)
                Options.MyToggle_autoTkVIP:SetValue(false)
                spawn(function()
                    while true do wait(60)
                        if _G.autoTicket then
                            Remote:FireServer("General","Quests","Tickets")
                            wait(1.5)
                            Remote:FireServer("General","Quests","TicketsClaim")
                        end
                    end
                end)
                spawn(function()
                    while true do wait(60)
                        if _G.autoTicketVIP then
                            Remote:FireServer("General","Quests","TicketsVIP")
                            wait(1.5)
                            Remote:FireServer("General","Quests","TicketsVIPClaim")
                        end
                    end
                end)

                local Daily_Rewards = Tabs.Miscellaneous:AddSection("Daily Rewards")
                local Toggle_autoDR = Daily_Rewards:AddToggle("MyToggle_autoDR", { Title = "Auto Claim Daily Rewards", Default = false })
                Toggle_autoDR:OnChanged(function()
                    if Toggle_autoDR.Value then
                        _G.autoDailyRewards = true
                    else
                        _G.autoDailyRewards = false
                    end
                end)
                Options.MyToggle_autoDR:SetValue(false)
                spawn(function()
                    while true do wait(60)
                        if _G.autoDailyRewards then
                            Remote:FireServer("General","DailyRewards","Claim")
                        end
                    end
                end)
                
                local Trial_Merchant = Tabs.Miscellaneous:AddSection("Trial Merchant")
                local MerchantName = nil

                local Dropdown_Merchant = Trial_Merchant:AddDropdown("Dropdown_Merchant", {
                    Title = "Select Merchant",
                    Description = "Select Merchant to Buy",
                    Values = {"2x Damage", "2x Exp", "Shiny", "2x Coins", "Raid Key" , "Passive Capsul"},
                    Multi = false,
                    Default = 1,
                })
                Dropdown_Merchant:SetValue("2x Damage")
                Dropdown_Merchant:OnChanged(function(Value)
                    MerchantName = Value 
                end)
                local Input_NumChests = Trial_Merchant:AddInput("Input_NumChests", {
                    Title = "Merchant Number",
                    Description = "Number of Merchant to Open",
                    Default = "1",
                    Numeric = true, -- Only allows numbers
                    Finished = true, -- Only calls callback when you press enter
                    Callback = function(Value)
                        MerchantNumInput = Value 
                    end
                })
                Trial_Merchant:AddButton({
                    Title = "Buy",
                    Description = "Click here to Buy Merchant",
                    Callback = function()
                        local numsf2 = tonumber(MerchantNumInput)
                        if not numsf2 or numsf2 <= 0 then
                            warn("Invalid Merchant number input!")
                            return
                        end
                        for i = 1, numsf2 do wait(2.5)
                            Remote:FireServer("General", "Merchant", "Shop", MerchantName, 1)
                        end	
                    end
                })

                local Dungeon_Merchant = Tabs.Miscellaneous:AddSection("Dungeon Merchant")
                local MerchantName = nil

                local Dropdown_DungeonMerchant = Dungeon_Merchant:AddDropdown("Dropdown_DungeonMerchant", {
                    Title = "Select DungeonMerchant",
                    Description = "Select DungeonMerchant to Buy",
                    Values = {"2x Damage", "2x Exp", "Shiny", "2x Coins", "Curesd Plasma", "Defense Key"},
                    Multi = false,
                    Default = 1,
                })
                Dropdown_DungeonMerchant:SetValue("2x Damage")
                Dropdown_DungeonMerchant:OnChanged(function(Value)
                    DunMerchantName = Value 
                end)
                local Input_NumDungeonMerchant = Dungeon_Merchant:AddInput("Input_NumDungeonMerchant", {
                    Title = "DungeonMerchant Number",
                    Description = "Number of DungeonMerchant to Open",
                    Default = "1",
                    Numeric = true, -- Only allows numbers
                    Finished = true, -- Only calls callback when you press enter
                    Callback = function(Value)
                        DunMerchantNumInput = Value 
                    end
                })
                Dungeon_Merchant:AddButton({
                    Title = "Buy",
                    Description = "Click here to Buy DungeonMerchant",
                    Callback = function()
                        local numsf2 = tonumber(DunMerchantNumInput)
                        if not numsf2 or numsf2 <= 0 then
                            warn("Invalid DungeonMerchant number input!")
                            return
                        end
                        for i = 1, numsf2 do wait(2.5)
                            Remote:FireServer("General", "DungeonMerchant", "Shop", DunMerchantName, 1)
                        end	
                    end
                })

                local Chests_main = Tabs.Miscellaneous:AddSection("Chests")
                local ChestsName = nil
                
                local Dropdown_Chests = Chests_main:AddDropdown("Dropdown_Chests", {
                    Title = "Select Chests",
                    Description = "Select Chests to Open",
                    Values = {"Artefacts Chest", "Beginner Chest", "Potions Chest", "Dragon Chest"},
                    Multi = false,
                    Default = 1,
                })
                Dropdown_Chests:SetValue("Artefacts Chest")
                Dropdown_Chests:OnChanged(function(Value)
                    ChestsName = Value 
                end)
                local Input_NumChests = Chests_main:AddInput("Input_NumChests", {
                    Title = "Chest Number",
                    Description = "Number of Chests to Open",
                    Default = "1",
                    Numeric = true, -- Only allows numbers
                    Finished = true, -- Only calls callback when you press enter
                    Callback = function(Value)
                        ChestsNumInput = Value 
                    end
                })
                Chests_main:AddButton({
                    Title = "Open",
                    Description = "Click here to Open Chests",
                    Callback = function()
                        local numsf = tonumber(ChestsNumInput)
                        if not numsf or numsf <= 0 then
                            warn("Invalid chest number input!")
                            return
                        end
                        for i = 1, numsf do wait(0.15)
                            Remote:FireServer("General", "Chests", "Open", ChestsName)
                        end	
                    end
                })

            -- ==================================== TAB_MISCELLANEOUS  ==============================

            -- ==================================== TAB_WEBHOOK  ====================================
                local Webhook_Egg = Tabs.Webhooks:AddSection("Webhook Egg")

                local Input_whEgg = Webhook_Egg:AddInput("Input_whEgg", {
                    Title = "Url Webhook",
                    Default = "",
                    Numeric = false, 
                    Finished = true, 
                    Callback = function(Value)
                        whEggInput = Value 
                    end
                })

                local Toggle_WhEgg = Webhook_Egg:AddToggle("MyToggle_WhEgg", { Title = "Send Webhook Egg", Default = false })
                Toggle_WhEgg:OnChanged(function()
                    if Toggle_WhEgg.Value then
                        _G.UseWebhookEgg = true
                    else
                        _G.UseWebhookEgg = false
                    end
                end)
                Options.MyToggle_WhEgg:SetValue(false)
                

                local Webhook_Item = Tabs.Webhooks:AddSection("Webhook Item")
                local Input_whCInvItem = Webhook_Item:AddInput("Input_whCInvItem", {
                    Title = "Url Webhook",
                    Default = "",
                    Numeric = false, -- Only allows numbers
                    Finished = true, -- Only calls callback when you press enter
                    Callback = function(Value)
                        whItemInput = Value 
                    end
                })
                local Toggle_whCInvItem = Webhook_Item:AddToggle("MyToggle_whCInvItem", { Title = "Send Webhook Item", Default = false })
                Toggle_whCInvItem:OnChanged(function()
                    if Toggle_whCInvItem.Value then
                        _G.UseWebhookItem = true
                    else
                        _G.UseWebhookItem = false
                    end
                end)
                Options.MyToggle_whCInvItem:SetValue(false)

                local Webhook_mention = Tabs.Webhooks:AddSection("Mention Rares (Discord UserID)")
                local Input_mention = Webhook_mention:AddInput("Input_mention", {
                    Title = "Discord UserID\nmention @everyoune",
                    Default = "",
                    Numeric = true, -- Only allows numbers
                    Finished = true, -- Only calls callback when you press enter
                    Callback = function(Value)
                        mentionInput = Value 
                    end
                })
                spawn(function()
                    while true do wait(0.25)
                        if _G.UseWebhookEgg then
                            local starFrames = player.PlayerGui:FindFirstChild("Star") and player.PlayerGui.Star:FindFirstChild("Frame")
                            if not starFrames then
                                wait(0.35)
                                continue
                            end

                            local fields = {}

                            for _, frame in ipairs(starFrames:GetChildren()) do
                                local characterFrame = frame:FindFirstChild("Character")
                                if characterFrame then
                                    local worldModel = characterFrame:FindFirstChild("ViewportFrame")
                                        and characterFrame.ViewportFrame:FindFirstChild("WorldModel")
                                    local petName = worldModel and worldModel:FindFirstChildWhichIsA("Model") and worldModel:FindFirstChildWhichIsA("Model").Name or "N/A"
                                    local petTitle = characterFrame:FindFirstChild("Title") and characterFrame.Title.Text or "N/A"
                                    local petLevel = characterFrame:FindFirstChild("Level") and characterFrame.Level.Text or "N/A"

                                    if petTitle == "Secret" then
                                        table.insert(fields, {name = "Pet Tier", value = "```" .. petTitle .. "```", inline = true})
                                        table.insert(fields, {name = "Pet Name", value = "```" .. petName .. "```", inline = true})
                                        table.insert(fields, {name = "Pet Level", value = "```" .. petLevel .. "```", inline = true})
                                    end
                                end
                            end

                            if #fields > 0 then
                                sendToDiscord(
                                    "The Secret is done, damn it!",
                                    "‡πÑ‡∏≠‡πâ‡∏™‡∏±‡∏î‡∏î‡∏ß‡∏á‡∏°‡∏∂‡∏á‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß ‡∏°‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏ï‡∏±‡∏ß‡∏•‡∏±‡∏ö !!",
                                    fields,
                                    whEggInput,
                                    tonumber(0x000000),
                                    mentionInput,
                                    true
                                )

                                repeat
                                    wait(0.35)
                                until not starFrames:FindFirstChildWhichIsA("Frame", true)
                            end

                            wait(0.22)
                        end
                    end
                end)
            -- ==================================== TAB_WEBHOOK  ====================================

            -- ====================================  Tools  ====================================
                local Tools_Option = Tabs.Tools:AddSection("Option")
                Tools_Option:AddButton({
                    Title = "AntiAFK",
                    Callback = function()
                        -- ====== AnitiAFK ======
                            local vu = game:GetService("VirtualUser")
                            local ViSendMouseButtonEvent = game:service'VirtualInputManager'
                            game:GetService("Players").LocalPlayer.Idled:connect(function()
                                vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
                                task.wait(1)
                                vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
                            end)
                            coroutine.resume(coroutine.create(function()
                                while task.wait() do
                                    pcall(function() 
                                        ViSendMouseButtonEvent:SendMouseButtonEvent(795, 595, 0, true, game, 1)
                                        task.wait(1)
                                        ViSendMouseButtonEvent:SendMouseButtonEvent(795, 595, 0, false, game, 1)
                                        task.wait(1000)
                                    end)
                                end
                            end))
                            game:GetService("Players").LocalPlayer.Idled:connect(function()
                                local Vector = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2  - (game:GetService("GuiService"):GetGuiInset().Y/2))
                                vu:Button1Down(Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2  - (game:GetService("GuiService"):GetGuiInset().Y/2)))
                            end)
                            game.Players.LocalPlayer.AttributeChanged:Connect(function(n)
                                if n == "Idle" then
                                    game.Players.LocalPlayer:SetAttribute("Idle", false)
                                end
                            end)
                        -- ====== AnitiAFK ======
                    end
                })
                local Toggle_HideNotification = Tools_Option:AddToggle("MyToggle_HideNotification", { Title = "Hide Notification", Default = false })
                Toggle_HideNotification:OnChanged(function()
                    if Toggle_HideNotification.Value then
                        game:GetService("Players").LocalPlayer.PlayerGui.UI.HUD.Notifications.Visible = false
                    else
                        game:GetService("Players").LocalPlayer.PlayerGui.UI.HUD.Notifications.Visible = true
                    end
                end)
                Options.MyToggle_HideNotification:SetValue(false)
                Tools_Option:AddButton({
                    Title = "White Screen Enabled ‚úÖ",
                    -- Description = "Click here to Teleport the map.",
                    Callback = function()
                        game:GetService("RunService"):Set3dRenderingEnabled(false)

                    end
                })
                -- game:GetService("Players").LocalPlayer.PlayerGui.UI.HUD.Notifications.Visible = false
                Tools_Option:AddButton({
                    Title = "White Screen Disabled ‚ùå",
                    -- Description = "Click here to Teleport the map.",
                    Callback = function()
                        game:GetService("RunService"):Set3dRenderingEnabled(true)
                    end
                })
                
                Tools_Option:AddButton({
                    Title = "Low VFX",
                    Callback = function()
                        workspace:FindFirstChildOfClass('Terrain').WaterWaveSize = 0
                        workspace:FindFirstChildOfClass('Terrain').WaterWaveSpeed = 0
                        workspace:FindFirstChildOfClass('Terrain').WaterReflectance = 0
                        workspace:FindFirstChildOfClass('Terrain').WaterTransparency = 0
                        game:GetService("Lighting").GlobalShadows = false
                        game:GetService("Lighting").FogEnd = 9e9
                        settings().Rendering.QualityLevel = 1
                        for i,v in pairs(workspace:GetDescendants()) do
                            if v:IsA("Part") or v:IsA("UnionOperation") or v:IsA("MeshPart") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
                                v.Material = "Plastic"
                                v.Reflectance = 0
                            elseif v:IsA("Decal") then
                                v.Transparency = 1
                            elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                                v.Lifetime = NumberRange.new(0)
                            elseif v:IsA("Explosion") then
                                v.BlastPressure = 1
                                v.BlastRadius = 1
                            end
                        end
                        for i,v in pairs(game:GetService("Lighting"):GetDescendants()) do
                            if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("BloomEffect") or v:IsA("DepthOfFieldEffect") then
                                v.Enabled = false
                            end
                        end
                    end
                })
                Tools_Option:AddButton({
                    Title = "BoostFPS",
                    Callback = function()
                        local ToDisable = {
                            Textures = true,
                            VisualEffects = true,
                            Parts = true,
                            Particles = true,
                            Sky = true
                        }
                    
                        local ToEnable = {
                            FullBright = false
                        }
                    
                        local Stuff = {}
                    
                        for _, v in next, game:GetDescendants() do
                            if ToDisable.Parts then
                                if v:IsA("Part") or v:IsA("Union") or v:IsA("BasePart") then
                                    v.Material = Enum.Material.SmoothPlastic
                                    table.insert(Stuff, 1, v)
                                end
                            end
                    
                            if ToDisable.Particles then
                                if v:IsA("ParticleEmitter") or v:IsA("Smoke") or v:IsA("Explosion") or v:IsA("Sparkles") or v:IsA("Fire") then
                                    v.Enabled = false
                                    table.insert(Stuff, 1, v)
                                end
                            end
                    
                            if ToDisable.VisualEffects then
                                if v:IsA("BloomEffect") or v:IsA("BlurEffect") or v:IsA("DepthOfFieldEffect") or v:IsA("SunRaysEffect") then
                                    v.Enabled = false
                                    table.insert(Stuff, 1, v)
                                end
                            end
                    
                            if ToDisable.Textures then
                                if v:IsA("Decal") or v:IsA("Texture") then
                                    v.Texture = ""
                                    table.insert(Stuff, 1, v)
                                end
                            end
                    
                            if ToDisable.Sky then
                                if v:IsA("Sky") then
                                    v.Parent = nil
                                    table.insert(Stuff, 1, v)
                                end
                            end
                        end
                    
                        game:GetService("TestService"):Message("Effects Disabler Script : Successfully disabled "..#Stuff.." assets / effects. Settings :")
                    
                        for i, v in next, ToDisable do
                            print(tostring(i)..": "..tostring(v))
                        end
                    
                        if ToEnable.FullBright then
                            local Lighting = game:GetService("Lighting")
                    
                            Lighting.FogColor = Color3.fromRGB(255, 255, 255)
                            Lighting.FogEnd = math.huge
                            Lighting.FogStart = math.huge
                            Lighting.Ambient = Color3.fromRGB(255, 255, 255)
                            Lighting.Brightness = 5
                            Lighting.ColorShift_Bottom = Color3.fromRGB(255, 255, 255)
                            Lighting.ColorShift_Top = Color3.fromRGB(255, 255, 255)
                            Lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)
                            Lighting.Outlines = true
                        end
                    end
                })

                local Tools_Addon = Tabs.Tools:AddSection("Addon")
                Tools_Addon:AddButton({
                    Title = "Copy Position",
                    Callback = function()
                        setclipboard(tostring(game.Players.LocalPlayer.Character.HumanoidRootPart.Position))
                    end
                })
                Tools_Addon:AddButton({
                    Title = "Rejoin",
                    -- Description = "Click here to Teleport the map.",
                    Callback = function()
                        local ts = game:GetService("TeleportService") local p = game.Players.LocalPlayer ts:Teleport(game.PlaceId, p) 
                    end
                })
                Tools_Addon:AddButton({
                    Title = "Hop Server",
                    -- Description = "Click here to Teleport the map.",
                    Callback = function()
                        local PlaceID = game.PlaceId
                        local AllIDs = {}
                        local foundAnything = ""
                        local actualHour = os.date("!*t").hour
                        local Deleted = false
                        function TPReturner()
                            local Site;
                            if foundAnything == "" then
                                Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
                            else
                                Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
                            end
                            local ID = ""
                            if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
                                foundAnything = Site.nextPageCursor
                            end
                            local num = 0;
                            for i,v in pairs(Site.data) do
                                local Possible = true
                                ID = tostring(v.id)
                                if tonumber(v.maxPlayers) > tonumber(v.playing) then
                                    for _,Existing in pairs(AllIDs) do
                                        if num ~= 0 then
                                            if ID == tostring(Existing) then
                                                Possible = false
                                            end
                                        else
                                            if tonumber(actualHour) ~= tonumber(Existing) then
                                                local delFile = pcall(function()
                                                    delfile("NotSameServers.json")
                                                    AllIDs = {}
                                                    table.insert(AllIDs, actualHour)
                                                end)
                                            end
                                        end
                                        num = num + 1
                                    end
                                    if Possible == true then
                                        table.insert(AllIDs, ID)
                                        wait()
                                        pcall(function()
                                            writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                                            wait()
                                            game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                                        end)
                                        wait(4)
                                    end
                                end
                            end
                        end

                        function Teleport()
                            while wait() do
                                pcall(function()
                                    TPReturner()
                                    if foundAnything ~= "" then
                                        TPReturner()
                                    end
                                end)
                            end
                        end
                        Teleport()
                    end
                })
                Tools_Addon:AddButton({
                    Title = "Copy JobID",
                    -- Description = "Click here to Teleport the map.",
                    Callback = function()
                        setclipboard(game.JobId)
                    end
                })
                local InputJobID = Tools_Addon:AddInput("InputJobID", {
                    Title = "JobID",
                    Default = "",
                    Numeric = false, -- Only allows numbers
                    Finished = true, -- Only calls callback when you press enter
                    Callback = function(Value)
                        JobIdInput = Value 
                    end
                })
                Tools_Addon:AddButton({
                    Title = "Copy JobID",
                    Description = "Click here to Join JobID",
                    Callback = function()
                        sgame:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, JobIdInput)
                    end
                })
                Tools_Addon:AddButton({
                    Title = "Close UI",
                    -- Description = "Click here to Join JobID",
                    Callback = function()
                        Fluent:Destroy()
                    end
                })
            -- ====================================  Tools  ====================================
        
        end
    -- ============================================= Other Code End =================================
        

    SaveManager:SetLibrary(Fluent)
    InterfaceManager:SetLibrary(Fluent)

    SaveManager:IgnoreThemeSettings()

    SaveManager:SetIgnoreIndexes({})

    InterfaceManager:SetFolder("DENGHUB2024")
    SaveManager:SetFolder("DENGHUB2024/Anime-Shadow")

    InterfaceManager:BuildInterfaceSection(Tabs.Settings)
    SaveManager:BuildConfigSection(Tabs.Settings)

    Window:SelectTab(1)

    
    -- ====== AnitiAFK ======
        local vu = game:GetService("VirtualUser")
        local ViSendMouseButtonEvent = game:service'VirtualInputManager'
        game:GetService("Players").LocalPlayer.Idled:connect(function()
            vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
            task.wait(1)
            vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
        end)
        coroutine.resume(coroutine.create(function()
            while task.wait() do
                pcall(function() 
                    ViSendMouseButtonEvent:SendMouseButtonEvent(795, 595, 0, true, game, 1)
                    task.wait(1)
                    ViSendMouseButtonEvent:SendMouseButtonEvent(795, 595, 0, false, game, 1)
                    task.wait(1000)
                end)
            end
        end))
        game:GetService("Players").LocalPlayer.Idled:connect(function()
            local Vector = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2  - (game:GetService("GuiService"):GetGuiInset().Y/2))
            vu:Button1Down(Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2  - (game:GetService("GuiService"):GetGuiInset().Y/2)))
        end)
        game.Players.LocalPlayer.AttributeChanged:Connect(function(n)
            if n == "Idle" then
                game.Players.LocalPlayer:SetAttribute("Idle", false)
            end
        end)
    -- ====== AnitiAFK ======

    ShowNotification("The script has been loaded.","")
    -- You can use the SaveManager:LoadAutoloadConfig() to load a config
    -- which has been marked to be one that auto loads!
    SaveManager:LoadAutoloadConfig()

end
